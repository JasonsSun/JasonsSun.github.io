<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jason&#39;s Blog</title>
  
  <subtitle>不再回头，不会将就，选对一个人是幸福，反之则是痛苦！珍惜余生，慎重选择！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://jasonssun.github.io/"/>
  <updated>2019-08-18T15:16:36.829Z</updated>
  <id>https://jasonssun.github.io/</id>
  
  <author>
    <name>Jason</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java笔记之JAVA静态类切换以及获取配置文件属性方法</title>
    <link href="https://jasonssun.github.io/2019/08/18/Java%E7%AC%94%E8%AE%B0%E4%B9%8BJAVA%E9%9D%99%E6%80%81%E7%B1%BB%E5%88%87%E6%8D%A2%E4%BB%A5%E5%8F%8A%E8%8E%B7%E5%8F%96%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%B1%9E%E6%80%A7%E6%96%B9%E6%B3%95/"/>
    <id>https://jasonssun.github.io/2019/08/18/Java笔记之JAVA静态类切换以及获取配置文件属性方法/</id>
    <published>2019-08-18T14:35:52.000Z</published>
    <updated>2019-08-18T15:16:36.829Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>1.使用@PostConstruct注解获取Service实现类并设置静态Service接收从而调用其功能或静态方法</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> IsalarmService isalarmService;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> IsalarmService isalarmServicez;</span><br><span class="line"><span class="meta">@PostConstruct</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">isalarmServicez = <span class="keyword">this</span>.isalarmService;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>2.从配置文件获取配置数据并转换给静态属性</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">zz.properties静态文件配置</span><br><span class="line">zz.accessToken = <span class="number">7949657846</span>c</span><br><span class="line">使用自定义实体类接收</span><br><span class="line"> <span class="number">1</span>.类名加注解(文件目录位置为项目resource下的config文件夹中的zz.properties文件)</span><br><span class="line"> <span class="meta">@Configuration</span></span><br><span class="line"> <span class="meta">@PropertySource</span>(<span class="string">"classpath:config/zz.properties"</span>)</span><br><span class="line"> <span class="meta">@Component</span></span><br><span class="line"><span class="number">2</span>.定义静态属性</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> String accessToken;</span><br><span class="line"><span class="number">3</span>.通过<span class="meta">@Value</span>注解使用Set方法注入</span><br><span class="line">  <span class="meta">@Value</span>(<span class="string">"$&#123;zz.accessToken&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAccessToken</span><span class="params">(String accessToken)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.accssToken = accessToken;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>3.解析JSON格式数据并使用自定义队列接收符合先进先出原则</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>. <span class="keyword">public</span> <span class="keyword">static</span> Queue&lt;String&gt; queue = <span class="keyword">new</span> LinkedList&lt;String&gt;();</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>.      <span class="comment">//队列存储信息</span></span><br><span class="line"><span class="comment">//                    JSONObject jason = JSON.parseObject(rsul);</span></span><br><span class="line"><span class="comment">//                    JSONObject data = JSON.parseObject(jason.getString("data"));</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//                    if (queue.isEmpty()) &#123;</span></span><br><span class="line"><span class="comment">//                        int i = 0;</span></span><br><span class="line"><span class="comment">//                        do &#123;</span></span><br><span class="line"><span class="comment">//                            queue.offer("");</span></span><br><span class="line"><span class="comment">//                            i++;</span></span><br><span class="line"><span class="comment">//                        &#125; while (i &lt; QUEUE_LENGTH);</span></span><br><span class="line"><span class="comment">//                    &#125; else if (queue.size() &gt;= QUEUE_LENGTH) &#123;</span></span><br><span class="line"><span class="comment">//                        queue.poll();</span></span><br><span class="line"><span class="comment">//                        String a = (int) Math.round(Math.random() * 100) + "";</span></span><br><span class="line"><span class="comment">//                        System.err.println("替换值：" + a);</span></span><br><span class="line"><span class="comment">//                        queue.offer(a);</span></span><br><span class="line"><span class="comment">//                    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//                        if (queueY.isEmpty()) &#123;</span></span><br><span class="line"><span class="comment">//                            for (int i = 0; i &lt; 9; i++) &#123;</span></span><br><span class="line"><span class="comment">//                                queueY.enQueue("");</span></span><br><span class="line"><span class="comment">//                            &#125;</span></span><br><span class="line"><span class="comment">//                        &#125; else if (queueY.isFull()) &#123;</span></span><br><span class="line"><span class="comment">//                            queueY.deQueue();</span></span><br><span class="line"><span class="comment">//                            String a = (int) Math.round(Math.random() * 100) + "";</span></span><br><span class="line"><span class="comment">//                            System.err.println("替换值：" + a);</span></span><br><span class="line"><span class="comment">//                            queueY.enQueue(a);</span></span><br><span class="line"><span class="comment">//                        &#125;</span></span><br><span class="line"><span class="comment">//                   else &#123;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">////                        queueY.enQueue(heart.getInteger("heart"));</span></span><br><span class="line"><span class="comment">//                    &#125;</span></span><br></pre></td></tr></table></figure><p><strong>4.静态集合类对象的Iterator并在遍历时执行更新删除操作</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">Base&lt;T&gt; 为泛型类</span><br><span class="line">即子类均继承该类</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>.<span class="keyword">public</span>  <span class="keyword">static</span> List&lt;Base&lt;T&gt;&gt; listBase ;</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>.<span class="comment">/***</span></span><br><span class="line"><span class="comment">     * 更新静态存储信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> ts</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateListBase</span><span class="params">(Base&lt;T&gt; ts)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (listBase == <span class="keyword">null</span>) &#123;</span><br><span class="line">            listBase = <span class="keyword">new</span> ArrayList&lt;Base&lt;T&gt;&gt;();</span><br><span class="line">            listBase.add(ts);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (listBase != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">            Iterator&lt;Base&lt;T&gt;&gt; it = listBase.iterator();</span><br><span class="line">            <span class="keyword">if</span> (ts <span class="keyword">instanceof</span> Cat) &#123;</span><br><span class="line">                Cat cat= (Cat) ts;</span><br><span class="line">                <span class="keyword">while</span> (it.hasNext()) &#123;</span><br><span class="line">                    Base&lt;T&gt; next = it.next();</span><br><span class="line">                    <span class="keyword">if</span> (next <span class="keyword">instanceof</span> Cat) &#123;</span><br><span class="line">                        Cat catstatic = (Cat) next;</span><br><span class="line">                        <span class="keyword">if</span> (catstatic.getDevID() == cat.getDevID()) &#123;</span><br><span class="line">                            listBase.remove(catstatic);</span><br><span class="line">                            listBase.add(cat);</span><br><span class="line">                            num = <span class="number">1</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (num != <span class="number">1</span>) &#123;</span><br><span class="line">                    listBase.add(cat);</span><br><span class="line">                &#125;</span><br><span class="line">         </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="学习笔记" scheme="https://jasonssun.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JAVA" scheme="https://jasonssun.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/JAVA/"/>
    
    
      <category term="JAVA" scheme="https://jasonssun.github.io/tags/JAVA/"/>
    
      <category term="静态切口注解（PostConstruct）" scheme="https://jasonssun.github.io/tags/%E9%9D%99%E6%80%81%E5%88%87%E5%8F%A3%E6%B3%A8%E8%A7%A3%EF%BC%88PostConstruct%EF%BC%89/"/>
    
      <category term="获取配置文件属性" scheme="https://jasonssun.github.io/tags/%E8%8E%B7%E5%8F%96%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%B1%9E%E6%80%A7/"/>
    
      <category term="队列（先进先出）" scheme="https://jasonssun.github.io/tags/%E9%98%9F%E5%88%97%EF%BC%88%E5%85%88%E8%BF%9B%E5%85%88%E5%87%BA%EF%BC%89/"/>
    
  </entry>
  
  <entry>
    <title>Java笔记之javascript常用转换函数</title>
    <link href="https://jasonssun.github.io/2019/08/18/Java%E7%AC%94%E8%AE%B0%E4%B9%8Bjavascript%E5%B8%B8%E7%94%A8%E8%BD%AC%E6%8D%A2%E5%87%BD%E6%95%B0/"/>
    <id>https://jasonssun.github.io/2019/08/18/Java笔记之javascript常用转换函数/</id>
    <published>2019-08-18T14:16:12.000Z</published>
    <updated>2019-08-18T14:33:21.645Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>1. Jquery 字符串对应字符全部替换规则</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">function <span class="title">replaceChar</span><span class="params">(s)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> val = s.value;</span><br><span class="line">        <span class="keyword">var</span> reg = <span class="keyword">new</span> RegExp(<span class="string">"-"</span>,<span class="string">"g"</span>);<span class="comment">//g,表示全部替换。</span></span><br><span class="line">        <span class="keyword">var</span> endstring=val.replace(reg,<span class="string">":"</span>); <span class="comment">//将 “-”替换为”:” 例如：09-20-30 转换为09:20:30</span></span><br><span class="line">        <span class="keyword">return</span> endstring;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>2. Jquery 字符串截取</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">  <span class="function">function <span class="title">convertAlarmCon</span><span class="params">(e)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> val = e.value;</span><br><span class="line">        <span class="keyword">return</span> val.substr(val.indexOf(<span class="string">":"</span>) + <span class="number">1</span>, val.length); 从”:”开始到结束的所有字符</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>3. 设置页面定时器</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">setInterval(function () &#123;<span class="comment">//定时器</span></span><br><span class="line">     todo();<span class="comment">//别的方法名称</span></span><br><span class="line">  &#125;, <span class="number">4</span> * <span class="number">1000</span>);<span class="comment">//每隔4秒调用一次</span></span><br></pre></td></tr></table></figure><p><strong>4.年月日 Date类型转yyyy-MM-dd</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">  <span class="function">function <span class="title">formatDate</span><span class="params">(date)</span> </span>&#123; <span class="comment">//设置时间转换格式</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> y = date.getFullYear();  <span class="comment">//获取年</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> m = date.getMonth() + <span class="number">1</span>;  <span class="comment">//获取月</span></span><br><span class="line"></span><br><span class="line">        m = m &lt; <span class="number">10</span> ? <span class="string">'0'</span> + m : m;  <span class="comment">//判断月是否大于10</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> d = date.getDate();  <span class="comment">//获取日</span></span><br><span class="line"></span><br><span class="line">        d = d &lt; <span class="number">10</span> ? (<span class="string">'0'</span> + d) : d;  <span class="comment">//判断日期是否大10</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> y + <span class="string">'-'</span> + m + <span class="string">'-'</span> + d;  <span class="comment">//返回时间格式</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>5.获取当前日期所在周的所有年月日格式 参数 字符串yyyy-MM-dd</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> <span class="function">function <span class="title">converToWeekDay</span><span class="params">(time)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> weekday = [];</span><br><span class="line">        <span class="keyword">var</span> Nowdate = <span class="keyword">new</span> Date(time);</span><br><span class="line">        <span class="keyword">var</span> WeekFirstDay = <span class="keyword">new</span> Date(Nowdate - (Nowdate.getDay() - <span class="number">1</span>) * <span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span>);</span><br><span class="line">        weekday.push(formatDate(WeekFirstDay));</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> h = <span class="number">1</span>; h &lt; <span class="number">7</span>; h++) &#123;</span><br><span class="line">            <span class="keyword">var</span> WeekDay = <span class="keyword">new</span> Date((WeekFirstDay / <span class="number">1000</span> + h * <span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span>) * <span class="number">1000</span>);</span><br><span class="line">            weekday.push(formatDate(WeekDay));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> weekday;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>6.获取当前日期所在月份的所有日期 参数 字符串yyyy-MM-dd</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">function <span class="title">convertDayToMonth</span><span class="params">(time)</span> </span>&#123;</span><br><span class="line">       let daysOfMonth = [];</span><br><span class="line">       let fullYear = <span class="keyword">new</span> Date(time).getFullYear();</span><br><span class="line">       let month = <span class="keyword">new</span> Date(time).getMonth() + <span class="number">1</span>;</span><br><span class="line">       let lastDayOfMonth = <span class="keyword">new</span> Date(fullYear, month, <span class="number">0</span>).getDate();</span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= lastDayOfMonth; i++) &#123;</span><br><span class="line">           daysOfMonth.push(fullYear + <span class="string">'-'</span> + month + <span class="string">'-'</span> + i);</span><br><span class="line">       &#125;</span><br><span class="line">       ;</span><br><span class="line">       <span class="keyword">return</span> daysOfMonth;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p><strong>7.格式化日期，如月、日、时、分、秒保证为2位数</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">function <span class="title">formatNumber</span><span class="params">(n)</span> </span>&#123;</span><br><span class="line">       n = n.toString()</span><br><span class="line">       <span class="keyword">return</span> n[<span class="number">1</span>] ? n : <span class="string">'0'</span> + n;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p><strong>8.参数number为毫秒时间戳，format为需要转换成的日期格式</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">function <span class="title">formatTime</span><span class="params">(time, format)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">let newArr = [];</span><br><span class="line"></span><br><span class="line">let formatArr = [<span class="string">'h'</span>, <span class="string">'m'</span>, <span class="string">'s'</span>]</span><br><span class="line"></span><br><span class="line">newArr.push(formatNumber(time.getHours()))</span><br><span class="line"></span><br><span class="line">newArr.push(formatNumber(time.getMinutes()))</span><br><span class="line"></span><br><span class="line">newArr.push(formatNumber(time.getSeconds()))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (let i in newArr) &#123;</span><br><span class="line"></span><br><span class="line">format = format.replace(formatArr[i], newArr[i])</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> format;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>9.参数number为毫秒时间戳，format为需要转换成的日期格式</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据开始时间 、长度、和步长（也就是间隔）获取时分秒格式的时间数据</span></span><br><span class="line"> <span class="function">function <span class="title">covertTimeToX</span><span class="params">(starttime, length, step)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">var</span> timeValue = [];</span><br><span class="line"></span><br><span class="line"> <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; length; i++) &#123;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">var</span> tempTime = [];</span><br><span class="line"></span><br><span class="line"> let times = <span class="keyword">new</span> Date(starttime);</span><br><span class="line"></span><br><span class="line"> times.setMilliseconds(step * i * <span class="number">60</span> * <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line"> tempTime = formatTime(times, <span class="string">'h:m:s'</span>);</span><br><span class="line"></span><br><span class="line"> timeValue.push(tempTime);</span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">return</span> timeValue;</span><br><span class="line"></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p><strong>10.将String 类型转换为Int类型</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">function <span class="title">covertStringToInt</span><span class="params">(m)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> num = <span class="number">0</span>;</span><br><span class="line">        num = parseInt(m);</span><br><span class="line">        <span class="keyword">return</span> num;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>11.解析Json格式字符串并转换成Int类型</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">function <span class="title">covertPressureToInt</span><span class="params">(pressure)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">var</span> num = <span class="number">0</span>;</span><br><span class="line">       <span class="keyword">var</span> data = JSON.parse(pressure)</span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">var</span> press in data) &#123;</span><br><span class="line">           num = parseInt(data[press]);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> num;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p><strong>12.根据传入时间戳转换获取时间戳对应的时分秒</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">function <span class="title">convertTimeStampToTime</span><span class="params">(timestamp)</span> </span>&#123;</span><br><span class="line">    let times = <span class="keyword">new</span> Date(timestamp);</span><br><span class="line">    <span class="keyword">var</span> tempTime = formatTime(times, <span class="string">'h:m:s'</span>);</span><br><span class="line">    <span class="keyword">return</span> tempTime;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>13.简单介绍使用Echarts实时数据获取显示</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">var</span> Chart = echarts.init(document.getElementById(<span class="string">"actualbreath"</span>));<span class="comment">//初始化'</span></span><br><span class="line">  <span class="keyword">var</span> actualheartoptions = &#123;</span><br><span class="line">        <span class="comment">//定义一个标题</span></span><br><span class="line">        title: &#123;</span><br><span class="line">            text: <span class="string">'心率'</span></span><br><span class="line">        &#125;,</span><br><span class="line">        legend: &#123;</span><br><span class="line">            data: [<span class="string">'时间'</span>]</span><br><span class="line">        &#125;,</span><br><span class="line">        tooltip: &#123;</span><br><span class="line">            trigger: <span class="string">'axis'</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">//X轴设置</span></span><br><span class="line">        xAxis: &#123;</span><br><span class="line">            name: <span class="string">'时间'</span>,</span><br><span class="line">            data: (function () &#123;</span><br><span class="line">                <span class="keyword">var</span> res = [];</span><br><span class="line">                <span class="keyword">var</span> len = <span class="number">15</span>;</span><br><span class="line">                <span class="keyword">while</span> (len--) &#123;</span><br><span class="line">                    <span class="keyword">var</span> now = (<span class="keyword">new</span> Date()).toLocaleTimeString().replace(/^\D*/, <span class="string">''</span>);</span><br><span class="line">                    res.push(now);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> res;</span><br><span class="line">            &#125;)()</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">//y轴不设置意味着y轴的数值随传进来参数最值自动给出波动范围</span></span><br><span class="line">        yAxis: &#123;&#125;,</span><br><span class="line">        <span class="comment">//name=legend.data的时候才能显示图例</span></span><br><span class="line">        series: [&#123;</span><br><span class="line">            name: <span class="string">'心率值'</span>,</span><br><span class="line">            type: <span class="string">'line'</span>,</span><br><span class="line">            itemStyle: &#123;</span><br><span class="line">                normal: &#123;</span><br><span class="line">                    color: <span class="string">'green'</span>,</span><br><span class="line">                    color0: <span class="string">'green'</span>,</span><br><span class="line">                    borderColor: <span class="string">'green'</span>,</span><br><span class="line">                    borderColor0: <span class="string">'green'</span>,</span><br><span class="line">                    lineStyle: &#123;</span><br><span class="line">                        color: <span class="string">'green'</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            data: (function () &#123;</span><br><span class="line">                <span class="keyword">var</span> res = [];</span><br><span class="line">                <span class="keyword">var</span> len = <span class="number">15</span>;</span><br><span class="line">                <span class="keyword">while</span> (len--) &#123;</span><br><span class="line">                    res.push(<span class="string">""</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> res;</span><br><span class="line">            &#125;)()</span><br><span class="line">        &#125;, &#123;</span><br><span class="line">            name: <span class="string">'下限'</span>,</span><br><span class="line">            type: <span class="string">'line'</span>,</span><br><span class="line">            data: [<span class="number">30</span>],</span><br><span class="line">            markLine: &#123;</span><br><span class="line">                data: [</span><br><span class="line">                    &#123;type: <span class="string">'average'</span>, name: <span class="string">'平均值'</span>&#125;</span><br><span class="line">                ]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                name: <span class="string">'上限'</span>,</span><br><span class="line">                type: <span class="string">'line'</span>,</span><br><span class="line">                data: [<span class="number">200</span>],</span><br><span class="line">                markLine: &#123;</span><br><span class="line">                    data: [</span><br><span class="line">                        &#123;type: <span class="string">'average'</span>, name: <span class="string">'平均值'</span>&#125;</span><br><span class="line">                    ]</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;]</span><br><span class="line"></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">  Chart.setOption(actualbreathoptions, <span class="keyword">true</span>);</span><br><span class="line">    setInterval(function () &#123;<span class="comment">//定时器</span></span><br><span class="line">        setFsChartBar();</span><br><span class="line">    &#125;, <span class="number">4</span> * <span class="number">1000</span>);<span class="comment">//每隔10秒刷新一次</span></span><br><span class="line"></span><br><span class="line">    <span class="function">function <span class="title">setFsChartBar</span><span class="params">(url)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> Chart = echarts.init(document.getElementById(<span class="string">'actualbreath'</span>));</span><br><span class="line">        <span class="keyword">var</span> Chartheart = echarts.init(document.getElementById(<span class="string">'actualheart'</span>));</span><br><span class="line">        <span class="keyword">var</span> actualbreathoptions = Chart.getOption();</span><br><span class="line">        <span class="keyword">var</span> actualheartoptions = Chartheart.getOption();</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            url: <span class="string">"发送URL数据请求"</span>,</span><br><span class="line">            dataType: <span class="string">"json"</span>,</span><br><span class="line">            type: <span class="string">'post'</span>,</span><br><span class="line">            success: function (json) &#123;<span class="comment">//</span></span><br><span class="line">                code = json.code;  <span class="comment">//拿到后台的数据</span></span><br><span class="line">                message = json.message;</span><br><span class="line">                <span class="keyword">var</span> acbreath = mini.get(<span class="string">"acbreath"</span>);</span><br><span class="line">                acbreath.setValue(json.data.breathe);</span><br><span class="line">                <span class="keyword">var</span> acheart = mini.get(<span class="string">"acheart"</span>);</span><br><span class="line">                acheart.setValue(json.data.heart);</span><br><span class="line"></span><br><span class="line">                actualheartoptions.xAxis[<span class="number">0</span>].data.push(convertTimeStampToTime(json.data.timestamp));</span><br><span class="line">                actualheartoptions.series[<span class="number">0</span>].data.push(json.data.heart);  <span class="comment">//拿到后台的数据</span></span><br><span class="line">                actualbreathoptions.xAxis[<span class="number">0</span>].data.push(convertTimeStampToTime(json.data.timestamp));</span><br><span class="line">                actualbreathoptions.series[<span class="number">0</span>].data.push(json.data.breathe);  <span class="comment">//拿到后台的数据</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        actualbreathoptions.series[<span class="number">0</span>].data.shift();</span><br><span class="line">        actualbreathoptions.xAxis[<span class="number">0</span>].data.shift();</span><br><span class="line"></span><br><span class="line">        actualheartoptions.series[<span class="number">0</span>].data.shift();</span><br><span class="line">        actualheartoptions.xAxis[<span class="number">0</span>].data.shift();</span><br><span class="line"></span><br><span class="line">        Chart.setOption(actualbreathoptions);</span><br><span class="line">        Chartheart.setOption(actualheartoptions);</span><br><span class="line">        Chart.hideLoading();</span><br><span class="line">        Chartheart.hideLoading();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//后续会针对Echarts进行系统性学习（图形化展示数据）</span></span><br></pre></td></tr></table></figure><p><strong>14.MiniUI默认加载查询数据字段</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> grid2 = mini.get(<span class="string">"datagrid2"</span>);</span><br><span class="line">  grid2.setUrl(getUrl(<span class="string">"项目相对Url地址"</span>));</span><br><span class="line">  grid2.load(&#123;sn: sn&#125;);</span><br></pre></td></tr></table></figure><p><strong>15.MiniUI获得当前tab页 并触发点击操作刷新页面重新加载数据</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> tabs=mini.get(<span class="string">"app"</span>);  <span class="comment">//tab页面ID</span></span><br><span class="line">   tabs.on(<span class="string">"activechanged"</span>,function(e)&#123;</span><br><span class="line">       <span class="keyword">if</span>(e.index==<span class="number">4</span>) <span class="comment">//获取要刷新的页面下标</span></span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">var</span> grid2 = mini.get(<span class="string">"datagrid2"</span>);</span><br><span class="line">           grid2.setUrl(getUrl(<span class="string">"相对路径"</span>));</span><br><span class="line">           console.log(sn);</span><br><span class="line">           grid2.load(&#123;sn: sn&#125;);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="学习笔记" scheme="https://jasonssun.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JAVA" scheme="https://jasonssun.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/JAVA/"/>
    
    
      <category term="JAVA" scheme="https://jasonssun.github.io/tags/JAVA/"/>
    
      <category term="Javascript" scheme="https://jasonssun.github.io/tags/Javascript/"/>
    
  </entry>
  
  <entry>
    <title>Java笔记之java8时间格式转换以及计算时间差</title>
    <link href="https://jasonssun.github.io/2019/07/12/Java%E7%AC%94%E8%AE%B0%E4%B9%8Bjava8%E6%97%B6%E9%97%B4%E6%A0%BC%E5%BC%8F%E8%BD%AC%E6%8D%A2%E4%BB%A5%E5%8F%8A%E8%AE%A1%E7%AE%97%E6%97%B6%E9%97%B4%E5%B7%AE/"/>
    <id>https://jasonssun.github.io/2019/07/12/Java笔记之java8时间格式转换以及计算时间差/</id>
    <published>2019-07-12T14:30:02.000Z</published>
    <updated>2019-07-12T15:12:45.093Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>1.将LocalDateTime转为自定义的时间格式的字符串</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>.</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getDateTimeAsString</span><span class="params">(LocalDateTime localDateTime, String format)</span> </span>&#123;</span><br><span class="line">    DateTimeFormatter formatter = DateTimeFormatter.ofPattern(format);</span><br><span class="line">    <span class="keyword">return</span> localDateTime.format(formatter);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">2</span>.</span><br><span class="line"> DateTimeFormatter df = DateTimeFormatter.ofPattern(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>);</span><br><span class="line">LocalDateTime time = LocalDateTime.now();</span><br><span class="line">String localTime = df.format(time);</span><br><span class="line">LocalDateTime ldt = LocalDateTime.parse(<span class="string">"2018-06-01 10:12:05"</span>,df);</span><br><span class="line">System.out.println(<span class="string">"LocalDateTime转成String类型的时间："</span>+localTime);</span><br><span class="line">System.out.println(<span class="string">"String类型的时间转成LocalDateTime："</span>+ldt);</span><br></pre></td></tr></table></figure><p><strong>2.将long类型的timestamp转为LocalDateTime</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> LocalDateTime <span class="title">getDateTimeOfTimestamp</span><span class="params">(<span class="keyword">long</span> timestamp)</span> </span>&#123;</span><br><span class="line">    Instant instant = Instant.ofEpochMilli(timestamp);</span><br><span class="line">    ZoneId zone = ZoneId.systemDefault();</span><br><span class="line">    <span class="keyword">return</span> LocalDateTime.ofInstant(instant, zone);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>3.将LocalDateTime转为long类型的timestamp</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">long</span> <span class="title">getTimestampOfDateTime</span><span class="params">(LocalDateTime localDateTime)</span> </span>&#123;</span><br><span class="line">    ZoneId zone = ZoneId.systemDefault();</span><br><span class="line">    Instant instant = localDateTime.atZone(zone).toInstant();</span><br><span class="line">    <span class="keyword">return</span> instant.toEpochMilli();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>4.将某时间字符串转为自定义时间格式的LocalDateTime</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> LocalDateTime <span class="title">parseStringToDateTime</span><span class="params">(String time, String format)</span> </span>&#123;</span><br><span class="line">    DateTimeFormatter df = DateTimeFormatter.ofPattern(format);</span><br><span class="line">    <span class="keyword">return</span> LocalDateTime.parse(time, df);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Java 8中表示日期和时间的类主要的有：</p><p>Instant：表示时刻，不直接对应年月日信息，需要通过时区转换<br>LocalDateTime: 表示与时区无关的日期和时间信息，不直接对应时刻，需要通过时区转换<br>LocalDate：表示与时区无关的日期，与LocalDateTime相比，只有日期信息，没有时间信息<br>LocalTime：表示与时区无关的时间，与LocalDateTime相比，只有时间信息，没有日期信息<br>ZonedDateTime： 表示特定时区的日期和时间<br>ZoneId/ZoneOffset：表示时区</p><h2 id="与字符串互转"><a href="#与字符串互转" class="headerlink" title="与字符串互转"></a>与字符串互转</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">DateTimeFormatter df = DateTimeFormatter.ofPattern(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>);</span><br><span class="line">LocalDateTime time = LocalDateTime.now();</span><br><span class="line">String localTime = df.format(time);</span><br><span class="line">LocalDateTime ldt = LocalDateTime.parse(<span class="string">"2018-06-01 10:12:05"</span>,df);</span><br><span class="line">System.out.println(<span class="string">"LocalDateTime转成String类型的时间："</span>+localTime);</span><br><span class="line">System.out.println(<span class="string">"String类型的时间转成LocalDateTime："</span>+ldt);</span><br></pre></td></tr></table></figure><h2 id="与Date互转"><a href="#与Date互转" class="headerlink" title="与Date互转"></a>与Date互转</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">java.util.Date date = <span class="keyword">new</span> java.util.Date();</span><br><span class="line">    Instant instant = date.toInstant();</span><br><span class="line">    ZoneId zone = ZoneId.systemDefault();</span><br><span class="line">    LocalDateTime localDateTime = LocalDateTime.ofInstant(instant, zone);</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">LocalDateTime localDateTime = LocalDateTime.now();</span><br><span class="line">    ZoneId zone = ZoneId.systemDefault();</span><br><span class="line">    Instant instant = localDateTime.atZone(zone).toInstant();</span><br><span class="line">    java.util.Date date = Date.from(instant);</span><br></pre></td></tr></table></figure><h2 id="与LocalDate互转"><a href="#与LocalDate互转" class="headerlink" title="与LocalDate互转"></a>与LocalDate互转</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">LocalDateTime now = LocalDateTime.now();</span><br><span class="line">LocalDate localDate = now.toLocalDate();</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">LocalDate localDate = LocalDate.now();</span><br><span class="line">    ZoneId zone = ZoneId.systemDefault();</span><br><span class="line">    Instant instant = localDate.atStartOfDay().atZone(zone).toInstant();</span><br><span class="line">    java.util.Date date = Date.from(instant);</span><br></pre></td></tr></table></figure><h1 id="Date与LocalDate-LocalDateTime-之间的转换工具类"><a href="#Date与LocalDate-LocalDateTime-之间的转换工具类" class="headerlink" title="Date与LocalDate,LocalDateTime 之间的转换工具类"></a>Date与LocalDate,LocalDateTime 之间的转换工具类</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.libstar.lsp.find.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.time.Instant;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalDate;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"><span class="keyword">import</span> java.time.ZoneId;</span><br><span class="line"><span class="keyword">import</span> java.time.ZonedDateTime;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LocalDateUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * LocalDate转Date</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> localDate</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Date <span class="title">localDate2Date</span><span class="params">(LocalDate localDate)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> == localDate) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ZonedDateTime zonedDateTime = localDate.atStartOfDay(ZoneId.systemDefault());</span><br><span class="line">        <span class="keyword">return</span> Date.from(zonedDateTime.toInstant());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Date转LocalDate</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> date</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> LocalDate <span class="title">date2LocalDate</span><span class="params">(Date date)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> == date) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Date转换为LocalDateTime</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> date</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> LocalDateTime <span class="title">date2LocalDateTime</span><span class="params">(Date date)</span></span>&#123;</span><br><span class="line">        Instant instant = date.toInstant();</span><br><span class="line">        ZoneId zoneId = ZoneId.systemDefault();</span><br><span class="line">        LocalDateTime localDateTime = instant.atZone(zoneId).toLocalDateTime();</span><br><span class="line">      <span class="keyword">return</span> localDateTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * LocalDateTime转换为Date</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> localDateTime</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Date <span class="title">localDateTime2Date</span><span class="params">( LocalDateTime localDateTime)</span></span>&#123;</span><br><span class="line">        ZoneId zoneId = ZoneId.systemDefault();</span><br><span class="line">        ZonedDateTime zdt = localDateTime.atZone(zoneId);</span><br><span class="line">        Date date = Date.from(zdt.toInstant());</span><br><span class="line">       <span class="keyword">return</span> date;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Java8计算日期时间差"><a href="#Java8计算日期时间差" class="headerlink" title="Java8计算日期时间差"></a>Java8计算日期时间差</h1><p>java8中计算时间差的三个函数</p><ul><li><ol><li>Period</li></ol></li><li><ol start="2"><li>Duration</li></ol></li><li><ol start="3"><li>ChronoUnit</li></ol></li></ul><h2 id="1-Period类"><a href="#1-Period类" class="headerlink" title="1. Period类"></a>1. Period类</h2><p>Period类方法getYears（），getMonths（）和getDays（）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.time.LocalDate; </span><br><span class="line"><span class="keyword">import</span> java.time.Month; </span><br><span class="line"><span class="keyword">import</span> java.time.Period;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> LocalDate today = LocalDate.now();</span><br><span class="line">        System.out.println(<span class="string">"Today : "</span> + today);</span><br><span class="line">        LocalDate birthDate = LocalDate.of(<span class="number">1995</span>, Month.MARCH, <span class="number">12</span>);</span><br><span class="line">        System.out.println(<span class="string">"BirthDate : "</span> + birthDate);</span><br><span class="line"></span><br><span class="line">        Period p = Period.between(birthDate, today);</span><br><span class="line">        System.out.printf(<span class="string">"年龄 : %d 年 %d 月 %d 日"</span>, p.getYears(), p.getMonths(), p.getDays());</span><br></pre></td></tr></table></figure><p>结果输出：</p><p>today : 2019-07-12<br>BirthDate : 1995-03-12<br> 年龄 : 24 年 ** 月 ** 日</p><h2 id="2-Duration类"><a href="#2-Duration类" class="headerlink" title="2.Duration类"></a>2.Duration类</h2><p>提供基于时间的值（如秒，纳秒）测量时间量的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.time.Duration; </span><br><span class="line"><span class="keyword">import</span> java.time.Instant;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> Instant inst1 = Instant.now();</span><br><span class="line">        System.out.println(<span class="string">"Inst1 : "</span> + inst1);</span><br><span class="line">        Instant inst2 = inst1.plus(Duration.ofSeconds(<span class="number">10</span>));</span><br><span class="line">        System.out.println(<span class="string">"Inst2 : "</span> + inst2);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"Difference in milliseconds : "</span> + Duration.between(inst1, inst2).toMillis());</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"Difference in seconds : "</span> + Duration.between(inst1, inst2).getSeconds());</span><br></pre></td></tr></table></figure><p>结果输出：</p><p>Inst1 : 2019-07-12T22:54:45.085Z<br>Inst2 : 2019-07-12T22:54:55.085Z<br>Difference in milliseconds : 10000<br>Difference in seconds : 10</p><h2 id="3-ChronoUnit类"><a href="#3-ChronoUnit类" class="headerlink" title="3. ChronoUnit类"></a>3. ChronoUnit类</h2><p>ChronoUnit类可用于在单个时间单位内测量一段时间，例如天数或秒。</p><p>例子：<br>使用between（）方法来查找两个日期之间的区别</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.time.LocalDate;</span><br><span class="line"><span class="keyword">import</span> java.time.Month;</span><br><span class="line"><span class="keyword">import</span> java.time.temporal.ChronoUnit;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> LocalDate startDate = LocalDate.of(<span class="number">1995</span>, Month.MARCH, <span class="number">12</span>);</span><br><span class="line">        System.out.println(<span class="string">"开始时间  : "</span> + startDate);</span><br><span class="line"></span><br><span class="line">        LocalDate endDate = LocalDate.of(<span class="number">2019</span>, Month.JULY, <span class="number">12</span>);</span><br><span class="line">        System.out.println(<span class="string">"结束时间 : "</span> + endDate);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">long</span> daysDiff = ChronoUnit.DAYS.between(startDate, endDate);</span><br><span class="line">        System.out.println(<span class="string">"两天之间的差在天数   : "</span> + daysDiff);</span><br></pre></td></tr></table></figure><p>结果输出：<br>开始时间  : 1995-03-12<br>结束时间 : 2019-07-12<br>两天之间的差在天数   : 8888</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="学习笔记" scheme="https://jasonssun.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JAVA" scheme="https://jasonssun.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/JAVA/"/>
    
    
      <category term="JAVA" scheme="https://jasonssun.github.io/tags/JAVA/"/>
    
      <category term="Date" scheme="https://jasonssun.github.io/tags/Date/"/>
    
      <category term="LocalDate" scheme="https://jasonssun.github.io/tags/LocalDate/"/>
    
      <category term="LocalDateTime" scheme="https://jasonssun.github.io/tags/LocalDateTime/"/>
    
  </entry>
  
  <entry>
    <title>Java笔记之取整函数总结</title>
    <link href="https://jasonssun.github.io/2019/07/12/Java%E7%AC%94%E8%AE%B0%E4%B9%8B%E5%8F%96%E6%95%B4%E5%87%BD%E6%95%B0%E6%80%BB%E7%BB%93/"/>
    <id>https://jasonssun.github.io/2019/07/12/Java笔记之取整函数总结/</id>
    <published>2019-07-12T13:50:38.000Z</published>
    <updated>2019-07-12T14:17:02.806Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="java的四种取整方法"><a href="#java的四种取整方法" class="headerlink" title="java的四种取整方法"></a>java的四种取整方法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>.<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">ceil</span><span class="params">(<span class="keyword">double</span> a)</span><span class="comment">//向上取整</span></span></span><br></pre></td></tr></table></figure><p>测试用例：</p><p>System.out.println(Math.ceil(1.01));<br>System.out.println(Math.ceil(-1.01));<br>System.out.println(Math.ceil(1.5));<br>System.out.println(Math.ceil(-1.5));</p><p>结果如下：</p><p>2.0<br>-1.0<br>2.0<br>-1.0</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span>.<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">floor</span><span class="params">(<span class="keyword">double</span> a)</span><span class="comment">//向下取整</span></span></span><br></pre></td></tr></table></figure><p>Math.floor(-1.1): -2.0<br>Math.floor(-1.5): -2.0<br>Math.floor(-1.6): -2.0<br>Math.floor(0.1): 0.0<br>Math.floor(0.5): 0.0<br>Math.floor(0.6): 0.0<br>Math.floor(1.1): 1.0<br>Math.floor(11.5): 11.0<br>Math.floor(15.7): 15.0</p><p>Math.floor(-0.5): -0.0</p><p>测试用例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">舍掉小数取整:Math.floor(2)=2</span><br><span class="line">舍掉小数取整:Math.floor(2.1)=2</span><br><span class="line">舍掉小数取整:Math.floor(2.5)=2</span><br><span class="line">舍掉小数取整:Math.floor(2.9)=2</span><br><span class="line">负数舍掉小数取整:Math.floor(-2)=-2</span><br><span class="line">负数舍掉小数取整:Math.floor(-2.1)=-3</span><br><span class="line">负数舍掉小数取整:Math.floor(-2.5)=-3</span><br><span class="line">负数舍掉小数取整:Math.floor(-2.9)=-3</span><br><span class="line"> </span><br><span class="line">见小数取整:Math.ceil(2)=2</span><br><span class="line">见小数取整:Math.ceil(2.1)=3</span><br><span class="line">见小数取整:Math.ceil(2.5)=3</span><br><span class="line">见小数取整:Math.ceil(2.9)=3</span><br><span class="line"> </span><br><span class="line">负数见小数取整:Math.ceil(-2)=-2</span><br><span class="line">负数见小数取整:Math.ceil(-2.1)=-2</span><br><span class="line">负数见小数取整:Math.ceil(-2.5)=-2</span><br><span class="line">负数见小数取整:Math.ceil(-2.9)=-2</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span>.RoundingMode模式</span><br></pre></td></tr></table></figure><p>例子：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">RoundingMode.CEILING：取右边最近的整数</span><br><span class="line"></span><br><span class="line">RoundingMode.DOWN：去掉小数部分取整，也就是正数取左边，负数取右边，相当于向原点靠近的方向取整</span><br><span class="line"></span><br><span class="line">RoundingMode.FLOOR：取左边最近的正数</span><br><span class="line"></span><br><span class="line">RoundingMode.HALF_DOWN:五舍六入，负数先取绝对值再五舍六入再负数</span><br><span class="line"></span><br><span class="line">RoundingMode.HALF_UP:四舍五入，负数原理同上</span><br><span class="line"></span><br><span class="line">RoundingMode.HALF_EVEN:这个比较绕，整数位若是奇数则四舍五入，若是偶数则五舍六入</span><br></pre></td></tr></table></figure><p>同理：<br><strong>类似于四舍五入</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Math.round(x) = Math.floor(x + 0.5)</span><br></pre></td></tr></table></figure><p>Math.round(-1.1): -1<br>Math.round(-1.5): -1<br>Math.round(-1.6): -2<br>Math.round(0.1): 0<br>Math.round(0.5): 1<br>Math.round(0.6): 1<br>Math.round(1.1): 1<br>Math.round(1.5): 2<br>Math.round(1.6): 2</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4</span>.Math.rint 函数返回最接近参数的整数，如果有<span class="number">2</span>个数同样接近，则会返回偶数的那个。</span><br></pre></td></tr></table></figure><p>测试用例：</p><p>Math.rint(-1.1): -1.0<br>Math.rint(-1.5): -2.0<br>Math.rint(-1.6): -2.0<br>Math.rint(0.1): 0.0<br>Math.rint(0.5): 0.0<br>Math.rint(0.6): 1.0<br>Math.rint(1.1): 1.0<br>Math.rint(1.5): 2.0<br>Math.rint(1.6): 2.0</p><h2 id="使用举例"><a href="#使用举例" class="headerlink" title="使用举例"></a>使用举例</h2><p>结合cron表达式实现根据时间差获取分钟数取整</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Double count=<span class="number">0</span>d;</span><br><span class="line">        <span class="keyword">if</span>(cron!=<span class="keyword">null</span>&amp;&amp;maxCount!=<span class="keyword">null</span>) &#123;</span><br><span class="line">            CronSequenceGenerator cronSequenceGenerator = <span class="keyword">new</span> CronSequenceGenerator(cron);</span><br><span class="line">             Date currentTime = <span class="keyword">new</span> Date();</span><br><span class="line">            Date nextTimePoint = cronSequenceGenerator.next(currentTime); <span class="comment">// currentTime为计算下次时间点的开始时间</span></span><br><span class="line">            Date nextNextTimePoint = cronSequenceGenerator.next(nextTimePoint);</span><br><span class="line">            <span class="keyword">int</span> minute = (<span class="keyword">int</span>) ((nextNextTimePoint.getTime() - nextTimePoint.getTime())); <span class="comment">// 计算秒</span></span><br><span class="line">              count = (Double.parseDouble(maxCount.trim()) * <span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span>) / minute;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">int</span>)Math.ceil(count.doubleValue());</span><br></pre></td></tr></table></figure><h1 id="cron表达式详解"><a href="#cron表达式详解" class="headerlink" title="cron表达式详解"></a><a href="https://www.cnblogs.com/javahr/p/8318728.html" target="_blank" rel="noopener">cron表达式详解</a></h1><p>　　Cron表达式是一个字符串，字符串以5或6个空格隔开，分为6或7个域，每一个域代表一个含义，Cron有如下两种语法格式：</p><p>　　（1） Seconds Minutes Hours DayofMonth Month DayofWeek Year</p><p>　　（2）<em>Seconds Minutes Hours DayofMonth Month DayofWeek</em></p><p>**　　一、结构**</p><p>　　corn从左到右（用空格隔开）：秒 分 小时 月份中的日期 月份 星期中的日期 年份</p><p>**　　二、各字段的含义**</p><p>| 字段 | 允许值 | 允许的特殊字符 |<br>| 秒（Seconds） | 0<del>59的整数 | , - * /    四个字符 |<br>| 分（_Minutes_） | 0</del>59的整数 | , - * /    四个字符 |<br>| 小时（_Hours_） | 0<del>23的整数 | , - * /    四个字符 |<br>| 日期（_DayofMonth_） | 1</del>31的整数（但是你需要考虑你月的天数） | ,- * ? / L W C     八个字符 |<br>| 月份（_Month_） | 1<del>12的整数或者 JAN-DEC | , - * /    四个字符 |<br>| 星期（_DayofWeek_） | 1</del>7的整数或者 SUN-SAT （1=SUN） | , - * ? / L C #     八个字符 |<br>| 年(可选，留空)（_Year_） | 1970~2099 | , - * /    四个字符 |</p><p>　　<strong>注意事项：</strong></p><p>　　每一个域都使用数字，但还可以出现如下特殊字符，它们的含义是：</p><p>　　（1）<em>：表示匹配该域的任意值。假如在Minutes域使用</em>, 即表示每分钟都会触发事件。</p><p>　　（2）?：只能用在DayofMonth和DayofWeek两个域。它也匹配域的任意值，但实际不会。因为DayofMonth和DayofWeek会相互影响。例如想在每月的20日触发调度，不管20日到底是星期几，则只能使用如下写法： 13 13 15 20 * ?, 其中最后一位只能用？，而不能使用<em>，如果使用</em>表示不管星期几都会触发，实际上并不是这样。</p><p>　　（3）-：表示范围。例如在Minutes域使用5-20，表示从5分到20分钟每分钟触发一次 </p><p>　　（4）/：表示起始时间开始触发，然后每隔固定时间触发一次。例如在Minutes域使用5/20,则意味着5分钟触发一次，而25，45等分别触发一次. </p><p>　　（5）,：表示列出枚举值。例如：在Minutes域使用5,20，则意味着在5和20分每分钟触发一次。 </p><p>　　（6）L：表示最后，只能出现在DayofWeek和DayofMonth域。如果在DayofWeek域使用5L,意味着在最后的一个星期四触发。 </p><p>　　（7）W:表示有效工作日(周一到周五),只能出现在DayofMonth域，系统将在离指定日期的最近的有效工作日触发事件。例如：在 DayofMonth使用5W，如果5日是星期六，则将在最近的工作日：星期五，即4日触发。如果5日是星期天，则在6日(周一)触发；如果5日在星期一到星期五中的一天，则就在5日触发。另外一点，W的最近寻找不会跨过月份 。</p><p>　　（8）LW:这两个字符可以连用，表示在某个月最后一个工作日，即最后一个星期五。 </p><p>　　（9）#:用于确定每个月第几个星期几，只能出现在DayofMonth域。例如在4#2，表示某月的第二个星期三。</p><p>　　<strong>三、常用表达式例子</strong></p><p>　　（1）<strong>0 0 2 1 * ? *</strong>   表示在每月的1日的凌晨2点调整任务</p><p>　　（2）*<em>0 15 10 ? * MON-FRI *</em>  表示周一到周五每天上午10:15执行作业</p><p>　　（3）<strong>0 15 10 ? 6L 2002-2006</strong>   表示2002-2006年的每个月的最后一个星期五上午10:15执行作</p><p>　　（4）<strong>0 0 10,14,16 * * ?</strong>   每天上午10点，下午2点，4点 </p><p>　　（5）<strong>0 0/30 9-17 * * ?</strong>   朝九晚五工作时间内每半小时 </p><p>　　（6）<strong>0 0 12 ? * WED</strong>    表示每个星期三中午12点 </p><p>　　（7）<strong>0 0 12 * * ?</strong>   每天中午12点触发 </p><p>　　（8）*<em>0 15 10 ? * *  *</em>  每天上午10:15触发 </p><p>　　（9）<strong>0 15 10 * * ?</strong>     每天上午10:15触发 </p><p>　　（10）*<em>0 15 10 * * ? * *</em>   每天上午10:15触发 </p><p>　　（11）<strong>0 15 10 * * ? 2005</strong>    2005年的每天上午10:15触发 </p><p>　　（12）<strong>0 * 14 * * ?</strong>     在每天下午2点到下午2:59期间的每1分钟触发 </p><p>　　（13）<strong>0 0/5 14 * * ?</strong>    在每天下午2点到下午2:55期间的每5分钟触发 </p><p>　　（14）<strong>0 0/5 14,18 * * ?</strong>     在每天下午2点到2:55期间和下午6点到6:55期间的每5分钟触发 </p><p>　　（15）*<em>0 0-5 14 * * ? *</em>   在每天下午2点到下午2:05期间的每1分钟触发 </p><p>　　（16）<strong>0 10,44 14 ? 3 WED</strong>    每年三月的星期三的下午2:10和2:44触发 </p><p>　　（17）*<em>0 15 10 ? * MON-FRI *</em>   周一至周五的上午10:15触发 </p><p>　　（18）*<em>0 15 10 15 * ? *</em>   每月15日上午10:15触发 </p><p>　　（19）*<em>0 15 10 L * ? *</em>   每月最后一日的上午10:15触发 </p><p>　　（20）*<em>0 15 10 ? * 6L *</em>   每月的最后一个星期五上午10:15触发 </p><p>　　（21）<strong>0 15 10 ? * 6L 2002-2005</strong>   2002年至2005年的每月的最后一个星期五上午10:15触发 </p><p>　　（22）<strong>0 15 10 ? * 6#3</strong>   每月的第三个星期五上午10:15触发</p><p>**　　注：**</p><p>　　（1）有些子表达式能包含一些范围或列表</p><p>　　例如：子表达式（天（星期））可以为 “MON-FRI”，“MON，WED，FRI”，“MON-WED,SAT”</p><p>“*”字符代表所有可能的值</p><p>　　因此，“<em>”在子表达式（月）里表示每个月的含义，“</em>”在子表达式（天（星期））表示星期的每一天</p><p>　　“/”字符用来指定数值的增量<br>　　例如：在子表达式（分钟）里的“0/15”表示从第0分钟开始，每15分钟<br>在子表达式（分钟）里的“3/20”表示从第3分钟开始，每20分钟（它和“3，23，43”）的含义一样</p><p>　　“？”字符仅被用于天（月）和天（星期）两个子表达式，表示不指定值<br>　　当2个子表达式其中之一被指定了值以后，为了避免冲突，需要将另一个子表达式的值设为“？”</p><p>　　“L” 字符仅被用于天（月）和天（星期）两个子表达式，它是单词“last”的缩写<br>　　但是它在两个子表达式里的含义是不同的。<br>　　在天（月）子表达式中，“L”表示一个月的最后一天<br>　　在天（星期）自表达式中，“L”表示一个星期的最后一天，也就是SAT</p><p>　　如果在“L”前有具体的内容，它就具有其他的含义了</p><p>　　例如：“6L”表示这个月的倒数第６天，“FRIL”表示这个月的最一个星期五<br>　　注意：在使用“L”参数时，不要指定列表或范围，因为这会导致问题</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="学习笔记" scheme="https://jasonssun.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JAVA" scheme="https://jasonssun.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/JAVA/"/>
    
    
      <category term="JAVA" scheme="https://jasonssun.github.io/tags/JAVA/"/>
    
  </entry>
  
  <entry>
    <title>数据库之MySQL caching_sha2_password 和 mysql_native_password</title>
    <link href="https://jasonssun.github.io/2019/07/11/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B9%8BMySQL-caching-sha2-password-%E5%92%8C-mysql-native-password/"/>
    <id>https://jasonssun.github.io/2019/07/11/数据库之MySQL-caching-sha2-password-和-mysql-native-password/</id>
    <published>2019-07-10T16:31:29.000Z</published>
    <updated>2019-07-12T14:20:26.898Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="1-问题重现"><a href="#1-问题重现" class="headerlink" title="1.问题重现"></a>1.问题重现</h1><p>Client does not support authentication protocol requested by server; consider upgrading MySQL client</p><h1 id="2-说明"><a href="#2-说明" class="headerlink" title="2.说明"></a>2.说明</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">为了提供更安全的密码加密，</span><br><span class="line">MySQL8.0的首选默认认证插件是caching_sha2_password，</span><br><span class="line">而不是mysql_native_password</span><br></pre></td></tr></table></figure><h1 id="3-解决办法"><a href="#3-解决办法" class="headerlink" title="3.解决办法"></a>3.解决办法</h1><p>解决方式或者注意事项：</p><h2 id="1-对于MySQL-8-0的升级，身份验证插件现有帐户保持不变，包括’root’-’localhost’管理帐户的插件。"><a href="#1-对于MySQL-8-0的升级，身份验证插件现有帐户保持不变，包括’root’-’localhost’管理帐户的插件。" class="headerlink" title="1.对于MySQL 8.0的升级，身份验证插件现有帐户保持不变，包括’root’@’localhost’管理帐户的插件。"></a>1.对于MySQL 8.0的升级，身份验证插件现有帐户保持不变，包括’root’@’localhost’管理帐户的插件。</h2><h2 id="2-对于新的MySQL-8-0安装，在初始化数据目录时，将-‘root’-’localhost’创建帐户，并且该帐户caching-sha2-password默认使用。"><a href="#2-对于新的MySQL-8-0安装，在初始化数据目录时，将-‘root’-’localhost’创建帐户，并且该帐户caching-sha2-password默认使用。" class="headerlink" title="2.对于新的MySQL 8.0安装，在初始化数据目录时，将 ‘root’@’localhost’创建帐户，并且该帐户caching_sha2_password默认使用。"></a>2.对于新的MySQL 8.0安装，在初始化数据目录时，将 ‘root’@’localhost’创建帐户，并且该帐户caching_sha2_password默认使用。</h2><h2 id="3-对于新的MySQL-8-0安装，还想使用之前的密码认证方式请使用"><a href="#3-对于新的MySQL-8-0安装，还想使用之前的密码认证方式请使用" class="headerlink" title="3.对于新的MySQL 8.0安装，还想使用之前的密码认证方式请使用"></a>3.对于新的MySQL 8.0安装，还想使用之前的密码认证方式请使用</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER USER <span class="string">'root'</span>@<span class="string">'localhost'</span> IDENTIFIED WITH mysql_native_password BY <span class="string">'password'</span>;</span><br></pre></td></tr></table></figure><h2 id="4-安装的时候两个密码可选加密方式"><a href="#4-安装的时候两个密码可选加密方式" class="headerlink" title="4.安装的时候两个密码可选加密方式"></a>4.安装的时候两个密码可选加密方式</h2><p><img src="/2019/07/11/数据库之MySQL-caching-sha2-password-和-mysql-native-password/1.png" alt></p><h1 id="4-查询自己的数据库和加密方式"><a href="#4-查询自己的数据库和加密方式" class="headerlink" title="4.查询自己的数据库和加密方式"></a>4.查询自己的数据库和加密方式</h1><p><img src="/2019/07/11/数据库之MySQL-caching-sha2-password-和-mysql-native-password/2.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="数据库 -   MySQL" scheme="https://jasonssun.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93-MySQL/"/>
    
    
      <category term="MySQL" scheme="https://jasonssun.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>数据库之&#39;hibernate.dialect&#39; not set错误</title>
    <link href="https://jasonssun.github.io/2019/07/11/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B9%8B-hibernate-dialect-not-set%E9%94%99%E8%AF%AF/"/>
    <id>https://jasonssun.github.io/2019/07/11/数据库之-hibernate-dialect-not-set错误/</id>
    <published>2019-07-10T16:18:32.000Z</published>
    <updated>2019-07-11T11:32:47.930Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="数据库问题重现"><a href="#数据库问题重现" class="headerlink" title="数据库问题重现"></a>数据库问题重现</h1><p>Caused by: org.hibernate.HibernateException: Access to DialectResolutionInfo cannot be null when ‘hibernate.dialect’ not set</p><h1 id="解决方式"><a href="#解决方式" class="headerlink" title="解决方式"></a>解决方式</h1><p>Hibernate SQL方言没有设置导致的，在properties文件中加入：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect</span><br></pre></td></tr></table></figure><p>Hibernate SQL方言整理如下:</p><p>| 数据库 | 方言 |<br>| ——- | :—— | ——: |<br>| DB2| org.hibernate.dialect.DB2Dialect |<br>| DB2 AS/400 | org.hibernate.dialect.DB2400Dialect |<br>| DB2 OS390    | org.hibernate.dialect.DB2390Dialect<br>| PostgreSQL|     org.hibernate.dialect.PostgreSQLDialect<br>| MySQL    | org.hibernate.dialect.MySQLDialect<br>| MySQL with InnoDB|     org.hibernate.dialect.MySQLInnoDBDialect<br>| MySQL with MyISAM    | org.hibernate.dialect.MySQLMyISAMDialect<br>| Oracle (any version)    | org.hibernate.dialect.OracleDialect<br>| Oracle 9i/10g    | org.hibernate.dialect.Oracle9Dialect<br>| Sybase    | org.hibernate.dialect.SybaseDialect<br>| Sybase Anywhere    | org.hibernate.dialect.SybaseAnywhereDialect<br>| Microsoft SQL Server    | org.hibernate.dialect.SQLServerDialect<br>| SAP DB|     org.hibernate.dialect.SAPDBDialect<br>| Informix|     org.hibernate.dialect.InformixDialect<br>| HypersonicSQL|     org.hibernate.dialect.HSQLDialect<br>| Ingres    | org.hibernate.dialect.IngresDialect<br>| Progress|     org.hibernate.dialect.ProgressDialect<br>| Mckoi SQL|     org.hibernate.dialect.MckoiDialect<br>| Interbase|     org.hibernate.dialect.InterbaseDialect<br>| Pointbase|     org.hibernate.dialect.PointbaseDialect<br>| FrontBase    | org.hibernate.dialect.FrontbaseDialect<br>| Firebird    | org.hibernate.dialect.FirebirdDialect</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="数据库" scheme="https://jasonssun.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="https://jasonssun.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/"/>
    
    
      <category term="MySQL" scheme="https://jasonssun.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>数据库之Public Key Retrieval is not allowed错误</title>
    <link href="https://jasonssun.github.io/2019/07/11/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B9%8BPublic-Key-Retrieval-is-not-allowed%E9%94%99%E8%AF%AF/"/>
    <id>https://jasonssun.github.io/2019/07/11/数据库之Public-Key-Retrieval-is-not-allowed错误/</id>
    <published>2019-07-10T16:02:48.000Z</published>
    <updated>2019-07-10T16:16:16.239Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="数据库问题重现"><a href="#数据库问题重现" class="headerlink" title="数据库问题重现"></a>数据库问题重现</h1><p>com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Public Key Retrieval is not allowed</p><h1 id="解决方式"><a href="#解决方式" class="headerlink" title="解决方式"></a>解决方式</h1><h2 id="1-mysql5及之前的版本使用的是旧版驱动”com-mysql-jdbc-Driver”，mysql6以及之后的版本需要更新到新版驱动，对应的Driver是”com-mysql-cj-jdbc-Driver”，但是这个驱动错误的信息是”Loading-class-com-mysql-jdbc-Driver-39-This-is-deprecated-The-new-driver-class-iscom-mysql-cj-jdbc-Driver’-The-driver-is-automatically-registered-via-the-SPI-and-manual-loading-of-the-driver-class-is-generally-unnecessary-”，排除这个原因。"><a href="#1-mysql5及之前的版本使用的是旧版驱动”com-mysql-jdbc-Driver”，mysql6以及之后的版本需要更新到新版驱动，对应的Driver是”com-mysql-cj-jdbc-Driver”，但是这个驱动错误的信息是”Loading-class-com-mysql-jdbc-Driver-39-This-is-deprecated-The-new-driver-class-iscom-mysql-cj-jdbc-Driver’-The-driver-is-automatically-registered-via-the-SPI-and-manual-loading-of-the-driver-class-is-generally-unnecessary-”，排除这个原因。" class="headerlink" title="1.mysql5及之前的版本使用的是旧版驱动”com.mysql.jdbc.Driver”，mysql6以及之后的版本需要更新到新版驱动，对应的Driver是”com.mysql.cj.jdbc.Driver”，但是这个驱动错误的信息是”Loading class com.mysql.jdbc.Driver&#39;. This is deprecated. The new driver class iscom.mysql.cj.jdbc.Driver’. The driver is automatically registered via the SPI and manual loading of the driver class is generally unnecessary.”，排除这个原因。"></a>1.mysql5及之前的版本使用的是旧版驱动”com.mysql.jdbc.Driver”，mysql6以及之后的版本需要更新到新版驱动，对应的Driver是”com.mysql.cj.jdbc.Driver”，但是这个驱动错误的信息是”Loading class <code>com.mysql.jdbc.Driver&#39;. This is deprecated. The new driver class is</code>com.mysql.cj.jdbc.Driver’. The driver is automatically registered via the SPI and manual loading of the driver class is generally unnecessary.”，排除这个原因。</h2><p>也就是升级Mysql</p><h2 id="2-连接数据库的url中，加上-allowPublicKeyRetrieval-true-参数，经过验证解决该问题。"><a href="#2-连接数据库的url中，加上-allowPublicKeyRetrieval-true-参数，经过验证解决该问题。" class="headerlink" title="2.连接数据库的url中，加上_allowPublicKeyRetrieval=true_参数，经过验证解决该问题。"></a>2.连接数据库的url中，加上<code>_allowPublicKeyRetrieval=true_</code>参数，经过验证解决该问题。</h2><h2 id="3-修改default-authentication-plugin设置，在my-ini中增加-mysqld-default-authentication-plugin-mysql-native-password，然后mysql命令行执行ALTER-USER-‘username’-’localhost’-IDENTIFIED-WITH-mysql-native-password-BY-‘password’-最后在url中添加时区参数serverTimezone-Asia-Shanghai。"><a href="#3-修改default-authentication-plugin设置，在my-ini中增加-mysqld-default-authentication-plugin-mysql-native-password，然后mysql命令行执行ALTER-USER-‘username’-’localhost’-IDENTIFIED-WITH-mysql-native-password-BY-‘password’-最后在url中添加时区参数serverTimezone-Asia-Shanghai。" class="headerlink" title="3.修改default_authentication_plugin设置，在my.ini中增加[mysqld]default_authentication_plugin=mysql_native_password，然后mysql命令行执行ALTER USER ‘username’@’localhost’ IDENTIFIED WITH mysql_native_password BY ‘password’;最后在url中添加时区参数serverTimezone=Asia/Shanghai。"></a>3.修改default_authentication_plugin设置，在my.ini中增加[mysqld]default_authentication_plugin=mysql_native_password，然后mysql命令行执行ALTER USER ‘username’@’localhost’ IDENTIFIED WITH mysql_native_password BY ‘password’;最后在url中添加时区参数serverTimezone=Asia/Shanghai。</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="数据库" scheme="https://jasonssun.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="https://jasonssun.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/"/>
    
    
      <category term="MySQL" scheme="https://jasonssun.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Windows10 安装MySQL8.0 Failed 解决办法</title>
    <link href="https://jasonssun.github.io/2019/07/08/Windows10-%E5%AE%89%E8%A3%85MySQL8-0-Failed-%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>https://jasonssun.github.io/2019/07/08/Windows10-安装MySQL8-0-Failed-解决办法/</id>
    <published>2019-07-07T16:04:04.000Z</published>
    <updated>2019-07-07T16:36:53.348Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="MySQL下载路径-图示如下："><a href="#MySQL下载路径-图示如下：" class="headerlink" title="MySQL下载路径 图示如下："></a>MySQL下载路径 图示如下：</h1><h2 id="1-MySQL下载路径"><a href="#1-MySQL下载路径" class="headerlink" title="1.MySQL下载路径"></a>1.<a href="https://dev.mysql.com/downloads/mysql/" target="_blank" rel="noopener">MySQL下载路径</a></h2><p><img src="/2019/07/08/Windows10-安装MySQL8-0-Failed-解决办法/1.png" alt></p><p><img src="/2019/07/08/Windows10-安装MySQL8-0-Failed-解决办法/2.png" alt></p><h2 id="2-出现status-failed的解决办法"><a href="#2-出现status-failed的解决办法" class="headerlink" title="2. 出现status failed的解决办法"></a>2. 出现status failed的解决办法</h2><p><img src="/2019/07/08/Windows10-安装MySQL8-0-Failed-解决办法/3.png" alt></p><p>升级一个插件，即32位 visual C++ 2013 and  visual C++ redistributable package，就是缺少这个才会出现failed，其实在安装的过程中跳出过这个的安装，但它是根据电脑直接匹配位数的也就是我们大多数的64位，所以需要再根据链接下载一个32位的,<a href="https://support.microsoft.com/en-us/help/3179560/update-for-visual-c-2013-and-visual-c-redistributable-package" target="_blank" rel="noopener">x86下载地址Visual C++ 2013 and Visual C++ Redistributable Package</a></p><p> <strong>下载如图:</strong></p><p><img src="/2019/07/08/Windows10-安装MySQL8-0-Failed-解决办法/4.png" alt></p><p><img src="/2019/07/08/Windows10-安装MySQL8-0-Failed-解决办法/5.png" alt></p><h2 id="附加详细安装步骤"><a href="#附加详细安装步骤" class="headerlink" title="附加详细安装步骤"></a><strong>附加详细安装步骤</strong></h2><ol><li><a href="https://www.cnblogs.com/cxc2012/p/8387839.html" target="_blank" rel="noopener">MySQL Community Server 5.7安装详细步骤</a></li><li><a href="https://blog.csdn.net/u013758456/article/details/86519574" target="_blank" rel="noopener">2019年最新版本：mysql-installer-community-8.0.13.0的安装详细图解</a></li></ol><h2 id="Over-Ending（结束语）"><a href="#Over-Ending（结束语）" class="headerlink" title="Over Ending（结束语）"></a>Over Ending（结束语）</h2><p>####MySQL安装告一段落，其余的相关配置 请自行查看官网，去探索吧，少年!</p><h3 id="注"><a href="#注" class="headerlink" title="注:"></a>注:</h3><p><strong>如果还有不了解的，可以在右下方与博主在线沟通</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="数据库" scheme="https://jasonssun.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="https://jasonssun.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/"/>
    
    
      <category term="MySQL" scheme="https://jasonssun.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Shiro登陆异常 did not match the expected credentials.</title>
    <link href="https://jasonssun.github.io/2019/06/23/%E4%BD%BF%E7%94%A8SpringBoot-Shiro%E6%A1%86%E6%9E%B6%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B%E4%B8%AD%E9%81%87%E8%A7%81%E7%9A%84%E5%AF%86%E7%A0%81%E4%B8%8D%E5%8C%B9%E9%85%8D%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>https://jasonssun.github.io/2019/06/23/使用SpringBoot-Shiro框架搭建过程中遇见的密码不匹配问题的解决方法/</id>
    <published>2019-06-22T17:52:12.000Z</published>
    <updated>2019-06-23T02:41:02.156Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>错误如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"> threw exception [Request processing failed; nested exception is org.apache.shiro.authc.IncorrectCredentialsException: Submitted credentials <span class="keyword">for</span> token [org.apache.shiro.authc.UsernamePasswordToken - admin, rememberMe=<span class="keyword">true</span>] did not match the expected credentials.] with root cause</span><br><span class="line">org.apache.shiro.authc.IncorrectCredentialsException: Submitted credentials <span class="keyword">for</span> token [org.apache.shiro.authc.UsernamePasswordToken - admin, rememberMe=<span class="keyword">true</span>] did not match the expected credentials.</span><br><span class="line">at org.apache.shiro.realm.AuthenticatingRealm.assertCredentialsMatch(AuthenticatingRealm.java:<span class="number">600</span>)</span><br><span class="line">at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:<span class="number">578</span>)</span><br><span class="line">at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:<span class="number">180</span>)</span><br><span class="line">at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:<span class="number">267</span>)</span><br><span class="line">at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:<span class="number">198</span>)</span><br><span class="line">at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:<span class="number">106</span>)</span><br><span class="line">at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:<span class="number">270</span>)</span><br><span class="line">at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:<span class="number">256</span>)</span><br><span class="line">at com.sk.main.controller.LoginController.login(LoginController.java:<span class="number">36</span>)</span><br><span class="line">at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</span><br><span class="line">at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:<span class="number">57</span>)</span><br><span class="line">at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:<span class="number">43</span>)</span><br><span class="line">at java.lang.reflect.Method.invoke(Method.java:<span class="number">606</span>)</span><br><span class="line">at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:<span class="number">221</span>)</span><br><span class="line">at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:<span class="number">137</span>)</span><br></pre></td></tr></table></figure><p>解决方案：</p><ol><li>这是shiro返回的密码校验结果不一样，要么你把shiro校验的令牌规则重写，就是按什么方式去校验。</li><li>要么你自己把密码加密好传给shiro。</li></ol><ul><li><p>白话文讲：<br>当你登陆的时候，你会创建一个<code>UsernamePasswordToken</code>对象，或者<code>UsernamePasswordToken</code>的子类对象，并且赋予账号、密码、rememberMe，这里的密码你需要和数据库一直，比如你做了<code>md5加密</code>，那么你先做<code>md5加密</code>然后再创建<code>UsernamePasswordToken</code>对象.<br>然后你在校验完毕后：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> SimpleAuthenticationInfo(token,memberSecurity.getLoginPswd(), getName());</span><br></pre></td></tr></table></figure><ul><li>这里的第二个参数为密码，shiro会把第二个参数和你开始传进来的参数按规则对比，如果错误（或者是同一个引用对象）就返回上面的错误。</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="学习笔记" scheme="https://jasonssun.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Shiro安全框架" scheme="https://jasonssun.github.io/tags/Shiro%E5%AE%89%E5%85%A8%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>搭建Springboot+Shiro权限安全框架</title>
    <link href="https://jasonssun.github.io/2019/06/23/%E6%90%AD%E5%BB%BASpringboot-Shiro%E6%9D%83%E9%99%90%E5%AE%89%E5%85%A8%E6%A1%86%E6%9E%B6/"/>
    <id>https://jasonssun.github.io/2019/06/23/搭建Springboot-Shiro权限安全框架/</id>
    <published>2019-06-22T17:05:32.000Z</published>
    <updated>2019-07-09T13:55:54.558Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="1-内容简介"><a href="#1-内容简介" class="headerlink" title="1. 内容简介"></a>1. 内容简介</h1><h2 id="主要讲解如何使用Spring-Boot与Shiro进行整合使用，实现强大的用户权限管理，其中涉及如何完成用户认证（即用户登录），用户授权，thymeleaf页面整合shiro权限标签等知识点。"><a href="#主要讲解如何使用Spring-Boot与Shiro进行整合使用，实现强大的用户权限管理，其中涉及如何完成用户认证（即用户登录），用户授权，thymeleaf页面整合shiro权限标签等知识点。" class="headerlink" title="主要讲解如何使用Spring Boot与Shiro进行整合使用，实现强大的用户权限管理，其中涉及如何完成用户认证（即用户登录），用户授权，thymeleaf页面整合shiro权限标签等知识点。"></a>主要讲解如何使用Spring Boot与Shiro进行整合使用，实现强大的用户权限管理，其中涉及如何完成用户认证（即用户登录），用户授权，thymeleaf页面整合shiro权限标签等知识点。</h2><h1 id="2-Spring-Boot与Shiro框架简介"><a href="#2-Spring-Boot与Shiro框架简介" class="headerlink" title="2.    Spring Boot与Shiro框架简介"></a>2.    Spring Boot与Shiro框架简介</h1><h2 id="2-1-Spring-Boot框架简介"><a href="#2-1-Spring-Boot框架简介" class="headerlink" title="2.1 Spring Boot框架简介"></a>2.1 Spring Boot框架简介</h2><p>Spring的诞生是 Java 企业版（Java Enterprise Edition，JEE，也称 J2EE）的<br>轻量级代替品。无需开发重量级的 Enterprise JavaBean（EJB），Spring 为企业级<br>Java 开发提供了一种相对简单的方法，通过依赖注入和面向切面编程，用简单的Java 对象（Plain Old Java Object，POJO）实现了 EJB 的功能。</p><p>虽然 Spring 的组件代码是轻量级的，但它的配置却是重量级的。</p><p>所有Spring配置都代表了开发时的损耗。 因为在思考 Spring 特性配置和解决业务问题之间需要进行思维切换，所以写配置挤占了写应用程序逻辑的时间。除此之外，项目的依赖管理也是件吃力不讨好的事情。决定项目里要用哪些库就已经够让人头痛的了，你还要知道这些库的哪个版本和其他库不会有冲突，这难题实在太棘手。并且，依赖管理也是一种损耗，添加依赖不是写应用程序代码。一旦选错了依赖的版本，随之而来的不兼容问题毫无疑问会是生产力杀手。</p><p>Spring Boot 让这一切成为了过去。<br>Spring Boot 简化了基于Spring的应用开发，只需要“run”就能创建一个独立的、生产级别的Spring应用。Spring Boot为Spring平台及第三方库提供开箱即用的设置（提供默认设置），这样我们就可以简单的开始。多数Spring Boot应用只需要很少的Spring配置。 </p><p>我们可以使用SpringBoot创建java应用，并使用java –jar 启动它，或者采用传统的war部署方式。  </p><p>Spring Boot 主要目标是：</p><ul><li>为所有 Spring 的开发提供一个从根本上更快的入门体验。</li><li>开箱即用，但通过自己设置参数，即可快速摆脱这种方式。</li><li>提供了一些大型项目中常见的非功能性特性，如内嵌服务器、安全、指标，健康检测、外部化配置等。 </li><li>绝对没有代码生成，也无需 XML 配置。</li></ul><h2 id="2-2-Shiro框架简介"><a href="#2-2-Shiro框架简介" class="headerlink" title="2.2    Shiro框架简介"></a>2.2    Shiro框架简介</h2><p>Apache Shiro是一个强大且易用的Java安全框架，执行身份验证、授权、密码学和会话管理。使用Shiro的易于理解的API,您可以快速、轻松地获得任何应用程序,从最小的移动应用程序到最大的网络和企业应用程序。</p><p>Apache Shiro 体系结构<br><img src="/2019/06/23/搭建Springboot-Shiro权限安全框架/s1.png" alt></p><p>1、    Authentication 认证 —- 用户登录<br>2、    Authorization 授权 — 用户具有哪些权限<br>3、    Cryptography 安全数据加密<br>4、    Session Management 会话管理<br>5、    Web Integration web系统集成<br>6、    Interations 集成其它应用，spring、缓存框架</p><h1 id="3-Spring-Boot快速入门"><a href="#3-Spring-Boot快速入门" class="headerlink" title="3.  Spring Boot快速入门"></a>3.  Spring Boot快速入门</h1><h2 id="3-1-建立Maven项目，导入spring-boot父工程"><a href="#3-1-建立Maven项目，导入spring-boot父工程" class="headerlink" title="3.1. 建立Maven项目，导入spring boot父工程"></a>3.1. 建立Maven项目，导入spring boot父工程</h2><p><img src="/2019/06/23/搭建Springboot-Shiro权限安全框架/s2.png" alt><br><img src="/2019/06/23/搭建Springboot-Shiro权限安全框架/s3.png" alt><br><img src="/2019/06/23/搭建Springboot-Shiro权限安全框架/s4.png" alt></p><ul><li>修改pom.xml：<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 继承Spring Boot的默认父工程 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Spring Boot 父工程 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.itheima<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springboot-shiro<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="3-2-导入web支持"><a href="#3-2-导入web支持" class="headerlink" title="3.2 导入web支持"></a>3.2 导入web支持</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 导入依赖 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 导入web支持：SpringMVC开发支持，Servlet相关的程序 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- web支持，SpringMVC， Servlet支持等 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3-3-编写测试Controller类"><a href="#3-3-编写测试Controller类" class="headerlink" title="3.3.    编写测试Controller类"></a>3.3.    编写测试Controller类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 测试方法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/hello"</span>)</span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">()</span></span>&#123;</span><br><span class="line">System.out.println(<span class="string">"UserController.hello()"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="string">"ok"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-4-编写SpringBoot启动类"><a href="#3-4-编写SpringBoot启动类" class="headerlink" title="3.4.    编写SpringBoot启动类"></a>3.4.    编写SpringBoot启动类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * SpringBoot启动类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> lenovo</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">SpringApplication.run(Application.class, args);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-5-导入thymeleaf页面模块"><a href="#3-5-导入thymeleaf页面模块" class="headerlink" title="3.5.    导入thymeleaf页面模块"></a>3.5.    导入thymeleaf页面模块</h2><ul><li>引入thymeleaf依赖</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 导入thymeleaf依赖 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>在Controller添加测试方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 测试thymeleaf</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/testThymeleaf"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">testThymeleaf</span><span class="params">(Model model)</span></span>&#123;</span><br><span class="line"><span class="comment">//把数据存入model</span></span><br><span class="line">model.addAttribute(<span class="string">"name"</span>, <span class="string">"黑马程序员"</span>);</span><br><span class="line"><span class="comment">//返回test.html</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">"test"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>建立test.html页面<br>在src/main/resource目录下创建templates目录，然后创建test.html页面</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>测试Thymeleaf的使用<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">th:text</span>=<span class="string">"$&#123;name&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在thymeleaf3.0以前对页面标签语法要求比较严格，开始标签必须有对应的结束标签。</p></li></ul><p>如果希望页面语法不严谨，但是也能够运行成功，可以把thymeleaf升级为3.0或以上版本。</p><p>升级thymeleaf3.0.2版本：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 修改参数 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 修改JDK的编译版本为1.8 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 修改thymeleaf的版本 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">thymeleaf.version</span>&gt;</span>3.0.2.RELEASE<span class="tag">&lt;/<span class="name">thymeleaf.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">thymeleaf-layout-dialect.version</span>&gt;</span>2.0.4<span class="tag">&lt;/<span class="name">thymeleaf-layout-dialect.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="4-Spring-Boot与Shiro整合实现用户认证"><a href="#4-Spring-Boot与Shiro整合实现用户认证" class="headerlink" title="4.    Spring Boot与Shiro整合实现用户认证"></a>4.    Spring Boot与Shiro整合实现用户认证</h1><h2 id="4-1分析Shiro的核心API"><a href="#4-1分析Shiro的核心API" class="headerlink" title="4.1分析Shiro的核心API"></a>4.1分析Shiro的核心API</h2><p>Subject： 用户主体（把操作交给SecurityManager）<br>SecurityManager：安全管理器（关联Realm）<br>Realm：Shiro连接数据的桥梁</p><h2 id="4-2-Spring-Boot整合Shiro"><a href="#4-2-Spring-Boot整合Shiro" class="headerlink" title="4.2.    Spring Boot整合Shiro"></a>4.2.    Spring Boot整合Shiro</h2><h3 id="4-2-1-导入shiro与spring整合依赖"><a href="#4-2-1-导入shiro与spring整合依赖" class="headerlink" title="4.2.1.    导入shiro与spring整合依赖"></a>4.2.1.    导入shiro与spring整合依赖</h3><p>修改pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- shiro与spring整合依赖 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.shiro<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>shiro-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-2-2-自定义Realm类"><a href="#4-2-2-自定义Realm类" class="headerlink" title="4.2.2 自定义Realm类"></a>4.2.2 自定义Realm类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.shiro;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationToken;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authz.AuthorizationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.realm.AuthorizingRealm;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.PrincipalCollection;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自定义Realm</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> lenovo</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserRealm</span> <span class="keyword">extends</span> <span class="title">AuthorizingRealm</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 执行授权逻辑</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> AuthorizationInfo <span class="title">doGetAuthorizationInfo</span><span class="params">(PrincipalCollection arg0)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"执行授权逻辑"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 执行认证逻辑</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> AuthenticationInfo <span class="title">doGetAuthenticationInfo</span><span class="params">(AuthenticationToken arg0)</span> <span class="keyword">throws</span> AuthenticationException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"执行认证逻辑"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-2-3-编写Shiro配置类（-）"><a href="#4-2-3-编写Shiro配置类（-）" class="headerlink" title="4.2.3     编写Shiro配置类（*）"></a>4.2.3     编写Shiro配置类（*）</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.shiro;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.spring.web.ShiroFilterFactoryBean;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.web.mgt.DefaultWebSecurityManager;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Qualifier;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Shiro的配置类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> lenovo</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ShiroConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 创建ShiroFilterFactoryBean</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ShiroFilterFactoryBean <span class="title">getShiroFilterFactoryBean</span><span class="params">(@Qualifier(<span class="string">"securityManager"</span>)</span>DefaultWebSecurityManager securityManager)</span>&#123;</span><br><span class="line">ShiroFilterFactoryBean shiroFilterFactoryBean = <span class="keyword">new</span> ShiroFilterFactoryBean();</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置安全管理器</span></span><br><span class="line">shiroFilterFactoryBean.setSecurityManager(securityManager);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> shiroFilterFactoryBean;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 创建DefaultWebSecurityManager</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Bean</span>(name=<span class="string">"securityManager"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> DefaultWebSecurityManager <span class="title">getDefaultWebSecurityManager</span><span class="params">(@Qualifier(<span class="string">"userRealm"</span>)</span>UserRealm userRealm)</span>&#123;</span><br><span class="line">DefaultWebSecurityManager securityManager = <span class="keyword">new</span> DefaultWebSecurityManager();</span><br><span class="line"><span class="comment">//关联realm</span></span><br><span class="line">securityManager.setRealm(userRealm);</span><br><span class="line"><span class="keyword">return</span> securityManager;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 创建Realm</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Bean</span>(name=<span class="string">"userRealm"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> UserRealm <span class="title">getRealm</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> UserRealm();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-3-使用Shiro内置过滤器实现页面拦截"><a href="#4-3-使用Shiro内置过滤器实现页面拦截" class="headerlink" title="4.3  使用Shiro内置过滤器实现页面拦截"></a>4.3  使用Shiro内置过滤器实现页面拦截</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.shiro;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.LinkedHashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.spring.web.ShiroFilterFactoryBean;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.web.mgt.DefaultWebSecurityManager;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Qualifier;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Shiro的配置类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> lenovo</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ShiroConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 创建ShiroFilterFactoryBean</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ShiroFilterFactoryBean <span class="title">getShiroFilterFactoryBean</span><span class="params">(@Qualifier(<span class="string">"securityManager"</span>)</span>DefaultWebSecurityManager securityManager)</span>&#123;</span><br><span class="line">ShiroFilterFactoryBean shiroFilterFactoryBean = <span class="keyword">new</span> ShiroFilterFactoryBean();</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置安全管理器</span></span><br><span class="line">shiroFilterFactoryBean.setSecurityManager(securityManager);</span><br><span class="line"></span><br><span class="line"><span class="comment">//添加Shiro内置过滤器</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Shiro内置过滤器，可以实现权限相关的拦截器</span></span><br><span class="line"><span class="comment"> *    常用的过滤器：</span></span><br><span class="line"><span class="comment"> *       anon: 无需认证（登录）可以访问</span></span><br><span class="line"><span class="comment"> *       authc: 必须认证才可以访问</span></span><br><span class="line"><span class="comment"> *       user: 如果使用rememberMe的功能可以直接访问</span></span><br><span class="line"><span class="comment"> *       perms： 该资源必须得到资源权限才可以访问</span></span><br><span class="line"><span class="comment"> *       role: 该资源必须得到角色权限才可以访问</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Map&lt;String,String&gt; filterMap = <span class="keyword">new</span> LinkedHashMap&lt;String,String&gt;();</span><br><span class="line"><span class="comment">/*filterMap.put("/add", "authc");</span></span><br><span class="line"><span class="comment">filterMap.put("/update", "authc");*/</span></span><br><span class="line"></span><br><span class="line">filterMap.put(<span class="string">"/testThymeleaf"</span>, <span class="string">"anon"</span>);</span><br><span class="line"></span><br><span class="line">filterMap.put(<span class="string">"/*"</span>, <span class="string">"authc"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//修改调整的登录页面</span></span><br><span class="line">shiroFilterFactoryBean.setLoginUrl(<span class="string">"/toLogin"</span>);</span><br><span class="line"></span><br><span class="line">shiroFilterFactoryBean.setFilterChainDefinitionMap(filterMap);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> shiroFilterFactoryBean;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 创建DefaultWebSecurityManager</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Bean</span>(name=<span class="string">"securityManager"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> DefaultWebSecurityManager <span class="title">getDefaultWebSecurityManager</span><span class="params">(@Qualifier(<span class="string">"userRealm"</span>)</span>UserRealm userRealm)</span>&#123;</span><br><span class="line">DefaultWebSecurityManager securityManager = <span class="keyword">new</span> DefaultWebSecurityManager();</span><br><span class="line"><span class="comment">//关联realm</span></span><br><span class="line">securityManager.setRealm(userRealm);</span><br><span class="line"><span class="keyword">return</span> securityManager;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 创建Realm</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Bean</span>(name=<span class="string">"userRealm"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> UserRealm <span class="title">getRealm</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> UserRealm();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-4-实现用户认证（登录）操作"><a href="#4-4-实现用户认证（登录）操作" class="headerlink" title="4.4 实现用户认证（登录）操作"></a>4.4 实现用户认证（登录）操作</h2><h3 id="4-4-1-设计登录页面"><a href="#4-4-1-设计登录页面" class="headerlink" title="4.4.1 设计登录页面"></a>4.4.1 设计登录页面</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">| </span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">_</span>"<span class="attr">UTF-8</span>"<span class="attr">_</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>登录页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">_</span>"<span class="attr">post</span>"<span class="attr">_</span> <span class="attr">action</span>=<span class="string">_</span>"<span class="attr">login</span>"<span class="attr">_</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  用户名:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">_</span>"<span class="attr">text</span>"<span class="attr">_</span> <span class="attr">name</span>=<span class="string">_</span>"<span class="attr">name</span>"<span class="attr">_</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">  密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">_</span>"<span class="attr">password</span>"<span class="attr">_</span> <span class="attr">name</span>=<span class="string">_</span>"<span class="attr">password</span>"<span class="attr">_</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">_</span>"<span class="attr">submit</span>"<span class="attr">_</span> <span class="attr">value</span>=<span class="string">_</span>"<span class="attr">__</span>登录"<span class="attr">_</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> |</span><br></pre></td></tr></table></figure><h3 id="4-4-2-编写Controller的登录逻辑"><a href="#4-4-2-编写Controller的登录逻辑" class="headerlink" title="4.4.2 编写Controller的登录逻辑"></a>4.4.2 编写Controller的登录逻辑</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 登录逻辑处理</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/login"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">login</span><span class="params">(String name,String password,Model model)</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 使用Shiro编写认证操作</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">//1.获取Subject</span></span><br><span class="line">Subject subject = SecurityUtils.getSubject();</span><br><span class="line"></span><br><span class="line"><span class="comment">//2.封装用户数据</span></span><br><span class="line">UsernamePasswordToken token = <span class="keyword">new</span> UsernamePasswordToken(name,password);</span><br><span class="line"></span><br><span class="line"><span class="comment">//3.执行登录方法</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">subject.login(token);</span><br><span class="line"></span><br><span class="line"><span class="comment">//登录成功</span></span><br><span class="line"><span class="comment">//跳转到test.html</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">"redirect:/testThymeleaf"</span>;</span><br><span class="line">&#125; <span class="keyword">catch</span> (UnknownAccountException e) &#123;</span><br><span class="line"><span class="comment">//e.printStackTrace();</span></span><br><span class="line"><span class="comment">//登录失败:用户名不存在</span></span><br><span class="line">model.addAttribute(<span class="string">"msg"</span>, <span class="string">"用户名不存在"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="string">"login"</span>;</span><br><span class="line">&#125;<span class="keyword">catch</span> (IncorrectCredentialsException e) &#123;</span><br><span class="line"><span class="comment">//e.printStackTrace();</span></span><br><span class="line"><span class="comment">//登录失败:密码错误</span></span><br><span class="line">model.addAttribute(<span class="string">"msg"</span>, <span class="string">"密码错误"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="string">"login"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-4-3-编写Realm的判断逻辑"><a href="#4-4-3-编写Realm的判断逻辑" class="headerlink" title="4.4.3.    编写Realm的判断逻辑"></a>4.4.3.    编写Realm的判断逻辑</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.shiro;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationToken;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.SimpleAuthenticationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.UsernamePasswordToken;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authz.AuthorizationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.realm.AuthorizingRealm;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.PrincipalCollection;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自定义Realm</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> lenovo</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserRealm</span> <span class="keyword">extends</span> <span class="title">AuthorizingRealm</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 执行授权逻辑</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> AuthorizationInfo <span class="title">doGetAuthorizationInfo</span><span class="params">(PrincipalCollection arg0)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"执行授权逻辑"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 执行认证逻辑</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> AuthenticationInfo <span class="title">doGetAuthenticationInfo</span><span class="params">(AuthenticationToken arg0)</span> <span class="keyword">throws</span> AuthenticationException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"执行认证逻辑"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//假设数据库的用户名和密码</span></span><br><span class="line">String name = <span class="string">"eric"</span>;</span><br><span class="line">String password = <span class="string">"123456"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//编写shiro判断逻辑，判断用户名和密码</span></span><br><span class="line"><span class="comment">//1.判断用户名</span></span><br><span class="line">UsernamePasswordToken token = (UsernamePasswordToken)arg0;</span><br><span class="line"><span class="keyword">if</span>(!token.getUsername().equals(name))&#123;</span><br><span class="line"><span class="comment">//用户名不存在</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;<span class="comment">//shiro底层会抛出UnKnowAccountException</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2.判断密码</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> SimpleAuthenticationInfo(<span class="string">""</span>,password,<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-5-整合MyBatis实现登录"><a href="#4-5-整合MyBatis实现登录" class="headerlink" title="4.5 整合MyBatis实现登录"></a>4.5 整合MyBatis实现登录</h2><h3 id="4-5-1-导入mybatis相关的依赖"><a href="#4-5-1-导入mybatis相关的依赖" class="headerlink" title="4.5.1    导入mybatis相关的依赖"></a>4.5.1    导入mybatis相关的依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 导入mybatis相关的依赖 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- mysql --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- SpringBoot的Mybatis启动器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-5-2-配置application-properties"><a href="#4-5-2-配置application-properties" class="headerlink" title="4.5.2     配置application.properties"></a>4.5.2     配置application.properties</h3><p>位置：src/main/resources目录下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">spring.datasource.driverClassName=com.mysql.jdbc.Driver</span><br><span class="line"></span><br><span class="line">spring.datasource.url=jdbc:mysql:<span class="comment">//localhost:3306/test</span></span><br><span class="line"></span><br><span class="line">spring.datasource.username=root</span><br><span class="line"></span><br><span class="line">spring.datasource.password=root</span><br><span class="line"></span><br><span class="line">spring.datasource.type=com.alibaba.druid.pool.DruidDataSource</span><br><span class="line"></span><br><span class="line">mybatis.type-aliases-<span class="keyword">package</span>=com.itheima.domain</span><br></pre></td></tr></table></figure><h3 id="4-5-3-编写User实体"><a href="#4-5-3-编写User实体" class="headerlink" title="4.5.3 编写User实体"></a>4.5.3 编写User实体</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.domain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> Integer id;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> String password;</span><br><span class="line"><span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.id = id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> password;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.password = password;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-5-4-编写UserMapper接口"><a href="#4-5-4-编写UserMapper接口" class="headerlink" title="4.5.4.    编写UserMapper接口"></a>4.5.4.    编写UserMapper接口</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.itheima.domain.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findByName</span><span class="params">(String name)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-5-5-编写UserMapper-xml映射文件"><a href="#4-5-5-编写UserMapper-xml映射文件" class="headerlink" title="4.5.5.    编写UserMapper.xml映射文件"></a>4.5.5.    编写UserMapper.xml映射文件</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE mapper</span></span><br><span class="line"><span class="meta">PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"</span></span><br><span class="line"><span class="meta">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 该文件存放CRUD的sql语句 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.mapper.UserMapper"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByName"</span> <span class="attr">parameterType</span>=<span class="string">"string"</span> <span class="attr">resultType</span>=<span class="string">"user"</span>&gt;</span></span><br><span class="line">SELECT id, </span><br><span class="line">NAME, </span><br><span class="line">PASSWORD</span><br><span class="line">FROM </span><br><span class="line">user where name = #&#123;value&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-5-6-编写业务接口和实现"><a href="#4-5-6-编写业务接口和实现" class="headerlink" title="4.5.6.    编写业务接口和实现"></a>4.5.6.    编写业务接口和实现</h3><ul><li><p>接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.itheima.domain.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findByName</span><span class="params">(String name)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.itheima.domain.User;</span><br><span class="line"><span class="keyword">import</span> com.itheima.mapper.UserMapper;</span><br><span class="line"><span class="keyword">import</span> com.itheima.service.UserService;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//注入Mapper接口</span></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findByName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> userMapper.findByName(name);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="4-5-7-添加-MapperScan注解"><a href="#4-5-7-添加-MapperScan注解" class="headerlink" title="4.5.7.    添加@MapperScan注解"></a>4.5.7.    添加@MapperScan注解</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.mybatis.spring.annotation.MapperScan;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * SpringBoot启动类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> lenovo</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@MapperScan</span>(<span class="string">"com.itheima.mapper"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">SpringApplication.run(Application.class, args);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-5-8-修改UserRealm"><a href="#4-5-8-修改UserRealm" class="headerlink" title="4.5.8.    修改UserRealm"></a>4.5.8.    修改UserRealm</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.shiro;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationToken;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.SimpleAuthenticationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.UsernamePasswordToken;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authz.AuthorizationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.realm.AuthorizingRealm;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.PrincipalCollection;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.itheima.domain.User;</span><br><span class="line"><span class="keyword">import</span> com.itheima.service.UserService;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自定义Realm</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> lenovo</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserRealm</span> <span class="keyword">extends</span> <span class="title">AuthorizingRealm</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 执行授权逻辑</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> AuthorizationInfo <span class="title">doGetAuthorizationInfo</span><span class="params">(PrincipalCollection arg0)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"执行授权逻辑"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> UserService userSerivce;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 执行认证逻辑</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> AuthenticationInfo <span class="title">doGetAuthenticationInfo</span><span class="params">(AuthenticationToken arg0)</span> <span class="keyword">throws</span> AuthenticationException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"执行认证逻辑"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//编写shiro判断逻辑，判断用户名和密码</span></span><br><span class="line"><span class="comment">//1.判断用户名</span></span><br><span class="line">UsernamePasswordToken token = (UsernamePasswordToken)arg0;</span><br><span class="line"></span><br><span class="line">User user = userSerivce.findByName(token.getUsername());</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(user==<span class="keyword">null</span>)&#123;</span><br><span class="line"><span class="comment">//用户名不存在</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;<span class="comment">//shiro底层会抛出UnKnowAccountException</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2.判断密码</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> SimpleAuthenticationInfo(<span class="string">""</span>,user.getPassword(),<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="5-Spring-Boot与Shiro整合实现用户授权"><a href="#5-Spring-Boot与Shiro整合实现用户授权" class="headerlink" title="5.    Spring Boot与Shiro整合实现用户授权"></a>5.    Spring Boot与Shiro整合实现用户授权</h1><h2 id="5-1-使用Shiro内置过滤器拦截资源"><a href="#5-1-使用Shiro内置过滤器拦截资源" class="headerlink" title="5.1.    使用Shiro内置过滤器拦截资源"></a>5.1.    使用Shiro内置过滤器拦截资源</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 创建ShiroFilterFactoryBean</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ShiroFilterFactoryBean <span class="title">getShiroFilterFactoryBean</span><span class="params">(@Qualifier(<span class="string">"securityManager"</span>)</span>DefaultWebSecurityManager securityManager)</span>&#123;</span><br><span class="line">ShiroFilterFactoryBean shiroFilterFactoryBean = <span class="keyword">new</span> ShiroFilterFactoryBean();</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置安全管理器</span></span><br><span class="line">shiroFilterFactoryBean.setSecurityManager(securityManager);</span><br><span class="line"></span><br><span class="line"><span class="comment">//添加Shiro内置过滤器</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Shiro内置过滤器，可以实现权限相关的拦截器</span></span><br><span class="line"><span class="comment"> *    常用的过滤器：</span></span><br><span class="line"><span class="comment"> *       anon: 无需认证（登录）可以访问</span></span><br><span class="line"><span class="comment"> *       authc: 必须认证才可以访问</span></span><br><span class="line"><span class="comment"> *       user: 如果使用rememberMe的功能可以直接访问</span></span><br><span class="line"><span class="comment"> *       perms： 该资源必须得到资源权限才可以访问</span></span><br><span class="line"><span class="comment"> *       role: 该资源必须得到角色权限才可以访问</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Map&lt;String,String&gt; filterMap = <span class="keyword">new</span> LinkedHashMap&lt;String,String&gt;();</span><br><span class="line"><span class="comment">/*filterMap.put("/add", "authc");</span></span><br><span class="line"><span class="comment">filterMap.put("/update", "authc");*/</span></span><br><span class="line"></span><br><span class="line">filterMap.put(<span class="string">"/testThymeleaf"</span>, <span class="string">"anon"</span>);</span><br><span class="line"><span class="comment">//放行login.html页面</span></span><br><span class="line">filterMap.put(<span class="string">"/login"</span>, <span class="string">"anon"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//授权过滤器</span></span><br><span class="line"><span class="comment">//注意：当前授权拦截后，shiro会自动跳转到未授权页面</span></span><br><span class="line">filterMap.put(<span class="string">"/add"</span>, <span class="string">"perms[user:add]"</span>);</span><br><span class="line"></span><br><span class="line">filterMap.put(<span class="string">"/*"</span>, <span class="string">"authc"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//修改调整的登录页面</span></span><br><span class="line">shiroFilterFactoryBean.setLoginUrl(<span class="string">"/toLogin"</span>);</span><br><span class="line"><span class="comment">//设置未授权提示页面</span></span><br><span class="line">shiroFilterFactoryBean.setUnauthorizedUrl(<span class="string">"/noAuth"</span>);</span><br><span class="line"></span><br><span class="line">shiroFilterFactoryBean.setFilterChainDefinitionMap(filterMap);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> shiroFilterFactoryBean;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-2-完成Shiro的资源授权"><a href="#5-2-完成Shiro的资源授权" class="headerlink" title="5.2.    完成Shiro的资源授权"></a>5.2.    完成Shiro的资源授权</h2><p>UserRealm：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 执行授权逻辑</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> AuthorizationInfo <span class="title">doGetAuthorizationInfo</span><span class="params">(PrincipalCollection arg0)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"执行授权逻辑"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//给资源进行授权</span></span><br><span class="line">SimpleAuthorizationInfo info = <span class="keyword">new</span> SimpleAuthorizationInfo();</span><br><span class="line"></span><br><span class="line"><span class="comment">//添加资源的授权字符串</span></span><br><span class="line">info.addStringPermission(<span class="string">"user:add"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> info;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="thymeleaf和shiro标签整合使用"><a href="#thymeleaf和shiro标签整合使用" class="headerlink" title="thymeleaf和shiro标签整合使用"></a>thymeleaf和shiro标签整合使用</h1><h2 id="6-1-导入thymeleaf扩展坐标"><a href="#6-1-导入thymeleaf扩展坐标" class="headerlink" title="6.1.    导入thymeleaf扩展坐标"></a>6.1.    导入thymeleaf扩展坐标</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- thymel对shiro的扩展坐标 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.theborakompanioni<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>thymeleaf-extras-shiro<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="6-2-配置ShiroDialect"><a href="#6-2-配置ShiroDialect" class="headerlink" title="6.2.    配置ShiroDialect"></a>6.2.    配置ShiroDialect</h2><p>在ShiroConfig类里面添加getShiroDialect方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 配置ShiroDialect，用于thymeleaf和shiro标签配合使用</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ShiroDialect <span class="title">getShiroDialect</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> ShiroDialect();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-3-在页面上使用shiro标签"><a href="#6-3-在页面上使用shiro标签" class="headerlink" title="6.3.    在页面上使用shiro标签"></a>6.3.    在页面上使用shiro标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>测试Thymeleaf的使用<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">th:text</span>=<span class="string">"$&#123;name&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">shiro:hasPermission</span>=<span class="string">"user:add"</span>&gt;</span></span><br><span class="line">进入用户添加功能： <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"add"</span>&gt;</span>用户添加<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">shiro:hasPermission</span>=<span class="string">"user:update"</span>&gt;</span></span><br><span class="line">进入用户更新功能： <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"update"</span>&gt;</span>用户更新<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"toLogin"</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h1 id="Over-Ending（结束语）"><a href="#Over-Ending（结束语）" class="headerlink" title="Over Ending（结束语）"></a>Over Ending（结束语）</h1><h4 id="SpringBoot-Shiro安全框架配置告一段落，其余的Shiro安全框架内容自行配置，自己去探索吧"><a href="#SpringBoot-Shiro安全框架配置告一段落，其余的Shiro安全框架内容自行配置，自己去探索吧" class="headerlink" title="SpringBoot+Shiro安全框架配置告一段落，其余的Shiro安全框架内容自行配置，自己去探索吧!"></a>SpringBoot+Shiro安全框架配置告一段落，其余的Shiro安全框架内容自行配置，自己去探索吧!</h4><h3 id="注"><a href="#注" class="headerlink" title="注:"></a>注:</h3><p><strong>如果还有不了解的，可以在右下方与博主在线沟通</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="SpringBoot" scheme="https://jasonssun.github.io/categories/SpringBoot/"/>
    
      <category term="Shiro" scheme="https://jasonssun.github.io/categories/SpringBoot/Shiro/"/>
    
      <category term="Java" scheme="https://jasonssun.github.io/categories/SpringBoot/Shiro/Java/"/>
    
    
      <category term="SpringBoot" scheme="https://jasonssun.github.io/tags/SpringBoot/"/>
    
      <category term="Shiro权限框架" scheme="https://jasonssun.github.io/tags/Shiro%E6%9D%83%E9%99%90%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>GitHub之Git本地常用操作命令</title>
    <link href="https://jasonssun.github.io/2019/06/23/GitHub%E4%B9%8BGit%E6%9C%AC%E5%9C%B0%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4/"/>
    <id>https://jasonssun.github.io/2019/06/23/GitHub之Git本地常用操作命令/</id>
    <published>2019-06-22T16:07:40.000Z</published>
    <updated>2019-06-22T17:53:45.765Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Git介绍"><a href="#Git介绍" class="headerlink" title="Git介绍"></a>Git介绍</h1><h2 id="1-什么是Git"><a href="#1-什么是Git" class="headerlink" title="1.什么是Git"></a>1.什么是Git</h2><p>   Git是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理。Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。</p><h2 id="2-版本控制工具具备的功能"><a href="#2-版本控制工具具备的功能" class="headerlink" title="2.版本控制工具具备的功能"></a>2.版本控制工具具备的功能</h2><p>1）、协同修改</p><p>可多人并行不悖的修改服务器上的同一个文件。</p><p>2）、数据备份</p><p>不仅保存目录和文件的当前状态，还能够保存每一个提交过的历史状态。</p><p>3）、版本管理</p><p>在保存每一个版本的文件信息时，要做到不保存重复数据，以节约存储空间，提高运行效率。（注：SVN增量式管理方式，Git采用的是文件快照方式。）</p><p>4）、权限控制</p><p>a）、对团队中参与开发的人员进行权限控制。</p><p>b）、对团队外的开发者贡献的代码进行审核—Git独有。</p><p>5）、历史记录</p><p>a）、查看修改人、修改时间、修改内容、日志信息等。</p><p>b）、将本地文件恢复到某一个历史状态。</p><p>6）、分支管理</p><p>允许开发团队在工作过程中多条生产线同时推进任务，进一步提高效率。</p><h2 id="3-组成结构"><a href="#3-组成结构" class="headerlink" title="3.组成结构"></a>3.组成结构</h2><ul><li><p>工作区：用来保存项目的元数据和对象数据库的地方。 这是 Git 中最重要的部分，从其它计算机克隆仓库时，拷贝的就是这里的数据。</p></li><li><p>暂存区：保存了下次将提交的文件列表信息，一般在 Git 仓库目录中。有时候也被称作“索引”，不过一般说法还是叫暂存区域。</p></li><li><p>版本库：也叫本地版本库，之所以说git 快，大部分提交都是对本地仓库而言的，不依赖网络，最后一次会推送的到远程仓库。</p></li><li><p>远程仓库：可以看做是github，它是一个远程仓库，它提供web服务的 供大家方便下载、查看、提交、存储。文件的状态。<br>结构图：</p><p><img src="/2019/06/23/GitHub之Git本地常用操作命令/git.png" alt></p></li></ul><h2 id="4-文件状态"><a href="#4-文件状态" class="headerlink" title="4.文件状态"></a>4.文件状态</h2><p>  新建文件状态为untracked，add命令执行后状态变为staged，已存在的文件状态为unmodified，修改文件内容，文件状态变为modified，commit提交，文件状态编程unmodifed。<br>  描述图：<br>   <img src="/2019/06/23/GitHub之Git本地常用操作命令/gitstream.png" alt></p><h2 id="5-命令速查表"><a href="#5-命令速查表" class="headerlink" title="5.命令速查表"></a>5.命令速查表</h2><p>   <img src="/2019/06/23/GitHub之Git本地常用操作命令/gittable.jpg" alt></p><h2 id="6-add和commit的区别"><a href="#6-add和commit的区别" class="headerlink" title="6.add和commit的区别"></a>6.add和commit的区别</h2><p><img src="/2019/06/23/GitHub之Git本地常用操作命令/gitadd_commit.jpg" alt></p><p>把文件往Git版本库里添加的时候，是分两步执行的：</p><ul><li><p>1、用git add把文件添加进去，实际上就是把文件修改添加到暂存区；</p></li><li><p>2、用git commit提交更改，实际上就是把暂存区的所有内容提交到当前分支。</p></li></ul><h2 id="7-Git命令参考手册-文本版"><a href="#7-Git命令参考手册-文本版" class="headerlink" title="7.Git命令参考手册(文本版)"></a>7.Git命令参考手册(文本版)</h2><p>1.来自：<a href="https://www.oschina.net/question/156344_148084" target="_blank" rel="noopener">Git命令参考手册(文本版)</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">git init                                                  # 初始化本地git仓库（创建新仓库）</span><br><span class="line">git config --global user.name "xxx"                       # 配置用户名</span><br><span class="line">git config --global user.email "xxx@xxx.com"              # 配置邮件</span><br><span class="line">git config --global color.ui true                         # git status等命令自动着色</span><br><span class="line">git config --global color.status auto</span><br><span class="line">git config --global color.diff auto</span><br><span class="line">git config --global color.branch auto</span><br><span class="line">git config --global color.interactive auto</span><br><span class="line">git clone git+ssh://git@192.168.53.168/VT.git             # clone远程仓库</span><br><span class="line">git status                                                # 查看当前版本状态（是否修改）</span><br><span class="line">git add xyz                                               # 添加xyz文件至index</span><br><span class="line">git add .                                                 # 增加当前子目录下所有更改过的文件至index</span><br><span class="line">git commit -m 'xxx'                                       # 提交</span><br><span class="line">git commit --amend -m 'xxx'                               # 合并上一次提交（用于反复修改）</span><br><span class="line">git commit -am 'xxx'                                      # 将add和commit合为一步</span><br><span class="line">git rm xxx                                                # 删除index中的文件</span><br><span class="line">git rm -r *                                               # 递归删除</span><br><span class="line">git log                                                   # 显示提交日志</span><br><span class="line">git log -1                                                # 显示1行日志 -n为n行</span><br><span class="line">git log -5</span><br><span class="line">git log --stat                                            # 显示提交日志及相关变动文件</span><br><span class="line">git log -p -m</span><br><span class="line">git show dfb02e6e4f2f7b573337763e5c0013802e392818         # 显示某个提交的详细内容</span><br><span class="line">git show dfb02                                            # 可只用commitid的前几位</span><br><span class="line">git show HEAD                                             # 显示HEAD提交日志</span><br><span class="line">git show HEAD^                                            # 显示HEAD的父（上一个版本）的提交日志 ^^为上两个版本 ^5为上5个版本</span><br><span class="line">git tag                                                   # 显示已存在的tag</span><br><span class="line">git tag -a v2.0 -m 'xxx'                                  # 增加v2.0的tag</span><br><span class="line">git show v2.0                                             # 显示v2.0的日志及详细内容</span><br><span class="line">git log v2.0                                              # 显示v2.0的日志</span><br><span class="line">git diff                                                  # 显示所有未添加至index的变更</span><br><span class="line">git diff --cached                                         # 显示所有已添加index但还未commit的变更</span><br><span class="line">git diff HEAD^                                            # 比较与上一个版本的差异</span><br><span class="line">git diff HEAD -- ./lib                                    # 比较与HEAD版本lib目录的差异</span><br><span class="line">git diff origin/master..master                            # 比较远程分支master上有本地分支master上没有的</span><br><span class="line">git diff origin/master..master --stat                     # 只显示差异的文件，不显示具体内容</span><br><span class="line">git remote add origin git+ssh://git@192.168.53.168/VT.git # 增加远程定义（用于push/pull/fetch）</span><br><span class="line">git branch                                                # 显示本地分支</span><br><span class="line">git branch --contains 50089                               # 显示包含提交50089的分支</span><br><span class="line">git branch -a                                             # 显示所有分支</span><br><span class="line">git branch -r                                             # 显示所有原创分支</span><br><span class="line">git branch --merged                                       # 显示所有已合并到当前分支的分支</span><br><span class="line">git branch --no-merged                                    # 显示所有未合并到当前分支的分支</span><br><span class="line">git branch -m master master_copy                          # 本地分支改名</span><br><span class="line">git checkout -b master_copy                               # 从当前分支创建新分支master_copy并检出</span><br><span class="line">git checkout -b master master_copy                        # 上面的完整版</span><br><span class="line">git checkout features/performance                         # 检出已存在的features/performance分支</span><br><span class="line">git checkout --track hotfixes/BJVEP933                    # 检出远程分支hotfixes/BJVEP933并创建本地跟踪分支</span><br><span class="line">git checkout v2.0                                         # 检出版本v2.0</span><br><span class="line">git checkout -b devel origin/develop                      # 从远程分支develop创建新本地分支devel并检出</span><br><span class="line">git checkout -- README                                    # 检出head版本的README文件（可用于修改错误回退）</span><br><span class="line">git merge origin/master                                   # 合并远程master分支至当前分支</span><br><span class="line">git cherry-pick ff44785404a8e                             # 合并提交ff44785404a8e的修改</span><br><span class="line">git push origin master                                    # 将当前分支push到远程master分支</span><br><span class="line">git push origin :hotfixes/BJVEP933                        # 删除远程仓库的hotfixes/BJVEP933分支</span><br><span class="line">git push --tags                                           # 把所有tag推送到远程仓库</span><br><span class="line">git fetch                                                 # 获取所有远程分支（不更新本地分支，另需merge）</span><br><span class="line">git fetch --prune                                         # 获取所有原创分支并清除服务器上已删掉的分支</span><br><span class="line">git pull origin master                                    # 获取远程分支master并merge到当前分支</span><br><span class="line">git mv README README2                                     # 重命名文件README为README2</span><br><span class="line">git reset --hard HEAD                                     # 将当前版本重置为HEAD（通常用于merge失败回退）</span><br><span class="line">git rebase</span><br><span class="line">git branch -d hotfixes/BJVEP933                           # 删除分支hotfixes/BJVEP933（本分支修改已合并到其他分支）</span><br><span class="line">git branch -D hotfixes/BJVEP933                           # 强制删除分支hotfixes/BJVEP933</span><br><span class="line">git ls-files                                              # 列出git index包含的文件</span><br><span class="line">git show-branch                                           # 图示当前分支历史</span><br><span class="line">git show-branch --all                                     # 图示所有分支历史</span><br><span class="line">git whatchanged                                           # 显示提交历史对应的文件修改</span><br><span class="line">git revert dfb02e6e4f2f7b573337763e5c0013802e392818       # 撤销提交dfb02e6e4f2f7b573337763e5c0013802e392818</span><br><span class="line">git ls-tree HEAD                                          # 内部命令：显示某个git对象</span><br><span class="line">git rev-parse v2.0                                        # 内部命令：显示某个ref对于的SHA1 HASH</span><br><span class="line">git reflog                                                # 显示所有提交，包括孤立节点</span><br><span class="line">git show HEAD@&#123;5&#125;</span><br><span class="line">git show master@&#123;yesterday&#125;                               # 显示master分支昨天的状态</span><br><span class="line">git log --pretty=format:'%h %s' --graph                   # 图示提交日志</span><br><span class="line">git show HEAD~3</span><br><span class="line">git show -s --pretty=raw 2be7fcb476</span><br><span class="line">git stash                                                 # 暂存当前修改，将所有至为HEAD状态</span><br><span class="line">git stash list                                            # 查看所有暂存</span><br><span class="line">git stash show -p stash@&#123;0&#125;                               # 参考第一次暂存</span><br><span class="line">git stash apply stash@&#123;0&#125;                                 # 应用第一次暂存</span><br><span class="line">git grep "delete from"                                    # 文件中搜索文本“delete from”</span><br><span class="line">git grep -e '#define' --and -e SORT_DIRENT</span><br><span class="line">git gc</span><br><span class="line">git fsck</span><br></pre></td></tr></table></figure><p>2.做参考手册请使用<a href="https://www.cnblogs.com/kenshinobiy/p/4543976.html" target="_blank" rel="noopener">参考手册</a></p><h1 id="Git本地常用操作指令"><a href="#Git本地常用操作指令" class="headerlink" title="Git本地常用操作指令"></a>Git本地常用操作指令</h1><p>1、创建git库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">　　git init  #在当前目录中生成一个.git 目录（含有.git目录的目录即是git仓库）</span><br></pre></td></tr></table></figure><p>2、注册git用户</p><p>—&gt;用于在团队合作开发中，表明代码作者。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">　　git config --global user.name XXX  #用户名</span><br><span class="line"></span><br><span class="line">　　git config --global user.email XXX   #用户邮箱</span><br><span class="line"></span><br><span class="line">　　git config --list  #查看用户信息</span><br></pre></td></tr></table></figure><p>注：加–global，全局设置。</p><p>3、向git库添加修改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">　　git add [path］ #会把对应目录或文件，添加到stage状态</span><br><span class="line">　　git add .  #会把当前所有的untrack files和changed but not updated添加到stage状态</span><br></pre></td></tr></table></figure><p>实际上是为修改内容添加index索引。</p><p>4、向版本库提交修改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit –m “XXXX”     #提交修改,添加注释</span><br></pre></td></tr></table></figure><p>注：git 提示： 未有add红色字体，未有commit绿色字体，已提交则worktree是干净的</p><p>5、查看当前代码库的状态</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">　　git status</span><br></pre></td></tr></table></figure><p>6、查看版本信息</p><p>　　—&gt;实际是查看修改提交信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">　　git log</span><br><span class="line"></span><br><span class="line">　　git log --graph  #以图形化（节点）展示当前git库的提交信息。</span><br></pre></td></tr></table></figure><p>7、查看指定版本信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git show sdjf974654dd….  #(show后面为每次提交系统自动生成的一串哈希值)</span><br><span class="line"></span><br><span class="line">　　git show sdji97 #一般只使用版本号的前几个字符即可</span><br></pre></td></tr></table></figure><p>8、撤销修改</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset</span><br></pre></td></tr></table></figure><p>　　<br>（1）撤销整体修改</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard  #回到原来编辑的地方,改动会丢失。（同样适用于团队对于其他人</span><br><span class="line">的修改恢复）</span><br><span class="line"></span><br><span class="line">git reset --hard sdv143kvf…... #可回到指定的版本#(hard后面为每次提交系统自</span><br><span class="line">动生成的一串哈希值)</span><br><span class="line">     git reset [path] 会改变path指定的文件或目录的stage状态，到非stage状态。</span><br><span class="line">     git reset 会将所有stage的文件状态，都改变成非stage状态。</span><br></pre></td></tr></table></figure><p>（2）撤销某次修改</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">回退1个change的写法就是git reset HEAD^，</span><br><span class="line">   2个为HEAD^^，</span><br><span class="line">   3个为HEAD~3，以此类推。</span><br></pre></td></tr></table></figure><p>9、向远端库推送修改（提交修改）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">　　git push origin 分支名</span><br></pre></td></tr></table></figure><p>10、暂存修改</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">　　git stash可以把当前的改动（stage和unstage，但不包括untrack的文件）暂存。</span><br><span class="line"></span><br><span class="line">　　然后通过git stash list查看。</span><br><span class="line"></span><br><span class="line">　　并通过git stash apply重新取出来。但apply之前要保证worktree是干净的。</span><br></pre></td></tr></table></figure><h1 id="Git团队开发常用操作指令"><a href="#Git团队开发常用操作指令" class="headerlink" title="Git团队开发常用操作指令"></a>Git团队开发常用操作指令</h1><ul><li><p>1、获取远端库项目</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">　　git  clone/pull</span><br></pre></td></tr></table></figure></li><li><p>2、团队开发的基本流程（多分支合并一个分支）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">　　git add .   #添加改动的文件</span><br><span class="line">　　git commit  #（提交至本地）</span><br><span class="line">　　git pull --rebase  #（将服务器项目与本地项目合并）</span><br><span class="line">　　git push    #（将本地项目上传至远端库）</span><br><span class="line">　　（在提交前要git pull --rebase 一下，确保当前的本地的代码为最新。）</span><br></pre></td></tr></table></figure></li></ul><h1 id="Git-分支管理"><a href="#Git-分支管理" class="headerlink" title="Git 分支管理"></a>Git 分支管理</h1><ul><li><p>1、建立分支　</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">　git branch AAA   #建立分支AAA</span><br></pre></td></tr></table></figure></li><li><p>2、分支切换</p></li></ul><p>　</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">　git checkout AAA   #从当前分支切换到AAA分支 (若AAA分支不存在，则自动新建)</span><br></pre></td></tr></table></figure><ul><li>3、将分支与主枝master合并<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout master   #（首先切换回主枝）</span><br><span class="line">　　git merge AAA    #（将分支AAA与主枝合并）</span><br></pre></td></tr></table></figure></li></ul><p>　　<br>注：git merge：默认情况下，Git执行”快进式合并”（fast-farward merge），会直接将Master分支指向Develop分支。<br>　　使用–no-ff参数后，会执行正常合并，在Master分支上生成一个新节点。为了保证版本演进的清晰（保持提交曲线为直线），建议采用这种方法。</p><ul><li>4、当前分支查看<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git branch    #默认有master（也称为主枝）</span><br><span class="line">　　git branch -r  #查看远端库分支</span><br><span class="line">　　git branch –a  #查看当前所有分支（包括本地分支和远端库分支）</span><br></pre></td></tr></table></figure></li></ul><p>　　</p><ul><li>5、删除分支<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">　git branch –d  AAA   #删除分支AAA</span><br></pre></td></tr></table></figure></li></ul><p>　</p><ul><li>6、切下远端库A分支到本地库A分支<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">　　git checkout -b  A origin/A  （若本地A分支不存在，则自动新建）</span><br></pre></td></tr></table></figure></li></ul><p>注：上面只是一些基本的操作命令，更多的命令可通过帮助文档查询。</p><p><strong>帮助文档的使用</strong>：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">man git-<span class="tag">&lt;<span class="name">需查询的指令</span>&gt;</span>      #（git后面有“-”）</span><br><span class="line">    如commit的查询为  man git-commit</span><br></pre></td></tr></table></figure><h1 id="本地代码上传Github"><a href="#本地代码上传Github" class="headerlink" title="本地代码上传Github"></a>本地代码上传Github</h1><ul><li><p>1、Gtthub上建立远端仓库，复制下载链接。</p></li><li><p>2、本地指定目录下，Gitbash粘贴远端仓库下载链接拉取远端仓库代码。</p></li><li><p>3、复制本地需要提交的代码到远端仓库目录。</p></li><li><p>4、Git add、commit、push 提交本地代码至Github远端仓库。</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="GitHub" scheme="https://jasonssun.github.io/categories/GitHub/"/>
    
    
      <category term="Git基本操作命令" scheme="https://jasonssun.github.io/tags/Git%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>IntelliJ IDEA build时出现Artifact contains illegal characters的解决</title>
    <link href="https://jasonssun.github.io/2019/06/22/IntelliJ%20IDEA%20build%E6%97%B6%E5%87%BA%E7%8E%B0Artifact%20contains%20illegal%20characters%E7%9A%84%E8%A7%A3%E5%86%B3/"/>
    <id>https://jasonssun.github.io/2019/06/22/IntelliJ IDEA build时出现Artifact contains illegal characters的解决/</id>
    <published>2019-06-22T14:20:14.000Z</published>
    <updated>2019-07-09T14:07:33.925Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://jasonssun.github.io/images/illeglecharacters.png" alt></p><h1 id="修改方法"><a href="#修改方法" class="headerlink" title="修改方法"></a>修改方法</h1><h2 id="此处无法创建是因为Artifact的命名为大小写混合，将大写改为小写即可正常创建"><a href="#此处无法创建是因为Artifact的命名为大小写混合，将大写改为小写即可正常创建" class="headerlink" title="此处无法创建是因为Artifact的命名为大小写混合，将大写改为小写即可正常创建"></a>此处无法创建是因为Artifact的命名为大小写混合，将大写改为小写即可正常创建</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="学习笔记" scheme="https://jasonssun.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="IDEA的正确使用方法" scheme="https://jasonssun.github.io/tags/IDEA%E7%9A%84%E6%AD%A3%E7%A1%AE%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>ScreenToGif-屏幕录制制作成gif的工具</title>
    <link href="https://jasonssun.github.io/2019/06/17/ScreenToGif-%E5%B1%8F%E5%B9%95%E5%BD%95%E5%88%B6%E5%88%B6%E4%BD%9C%E6%88%90gif%E7%9A%84%E5%B7%A5%E5%85%B7/"/>
    <id>https://jasonssun.github.io/2019/06/17/ScreenToGif-屏幕录制制作成gif的工具/</id>
    <published>2019-06-17T12:52:14.000Z</published>
    <updated>2019-06-17T13:31:13.878Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="一款小巧实用的动图Gif生成工具。"><a href="#一款小巧实用的动图Gif生成工具。" class="headerlink" title="一款小巧实用的动图Gif生成工具。"></a>一款小巧实用的动图Gif生成工具。</h2><h3 id="当截图已达不到你想要的效果时，何不试试它？一款集录像机、摄像头、画板、编辑器于一身的工具。"><a href="#当截图已达不到你想要的效果时，何不试试它？一款集录像机、摄像头、画板、编辑器于一身的工具。" class="headerlink" title="当截图已达不到你想要的效果时，何不试试它？一款集录像机、摄像头、画板、编辑器于一身的工具。"></a>当截图已达不到你想要的效果时，何不试试它？一款集录像机、摄像头、画板、编辑器于一身的工具。</h3><p> <img src="/2019/06/17/ScreenToGif-屏幕录制制作成gif的工具/s1.png" alt></p><h3 id="下载与安装"><a href="#下载与安装" class="headerlink" title="下载与安装"></a>下载与安装</h3><h4 id="1-登录ScreenToGif官网，或者使用GitHub下载最新发布版ScreenToGif"><a href="#1-登录ScreenToGif官网，或者使用GitHub下载最新发布版ScreenToGif" class="headerlink" title="1.登录ScreenToGif官网，或者使用GitHub下载最新发布版ScreenToGif"></a>1.登录<a href="https://www.screentogif.com/" target="_blank" rel="noopener">ScreenToGif</a>官网，或者使用GitHub下载最新发布版<a href="https://github.com/NickeManarin/ScreenToGif/releases" target="_blank" rel="noopener">ScreenToGif</a></h4><p> <img src="/2019/06/17/ScreenToGif-屏幕录制制作成gif的工具/s2.png" alt></p><hr><p> <img src="/2019/06/17/ScreenToGif-屏幕录制制作成gif的工具/s3.png" alt></p><p> <img src="/2019/06/17/ScreenToGif-屏幕录制制作成gif的工具/s4.png" alt></p><h4 id="2-事实上，它不仅可以录制屏幕，同时也包含了摄像头录制，白板书写录制等功能，并且在录制后，可以对录制内容进行增删、修改、压缩等处理。分别通过点击录像和停止来进行录制，通过编辑器对页面进行处理。"><a href="#2-事实上，它不仅可以录制屏幕，同时也包含了摄像头录制，白板书写录制等功能，并且在录制后，可以对录制内容进行增删、修改、压缩等处理。分别通过点击录像和停止来进行录制，通过编辑器对页面进行处理。" class="headerlink" title="2.事实上，它不仅可以录制屏幕，同时也包含了摄像头录制，白板书写录制等功能，并且在录制后，可以对录制内容进行增删、修改、压缩等处理。分别通过点击录像和停止来进行录制，通过编辑器对页面进行处理。"></a>2.事实上，它不仅可以录制屏幕，同时也包含了摄像头录制，白板书写录制等功能，并且在录制后，可以对录制内容进行增删、修改、压缩等处理。分别通过点击录像和停止来进行录制，通过编辑器对页面进行处理。</h4><p> <img src="/2019/06/17/ScreenToGif-屏幕录制制作成gif的工具/s5.png" alt></p><p> <img src="/2019/06/17/ScreenToGif-屏幕录制制作成gif的工具/s6.png" alt></p><p> <img src="/2019/06/17/ScreenToGif-屏幕录制制作成gif的工具/s7.png" alt></p><h3 id="生成的效果图："><a href="#生成的效果图：" class="headerlink" title="生成的效果图："></a>生成的效果图：</h3><p> <img src="/2019/06/17/ScreenToGif-屏幕录制制作成gif的工具/s8.gif" alt></p><ul><li>在编辑中有很多对帧的操作如:增加删除、循环、反转，特别是移除重复帧功能，能很好的减小gif占用内存大小；</li><li>而在图片选项中则包含了水印、微动、模糊、字幕、自由文本、自由绘制等功能；</li><li>ScreenToGif还支持简单的过渡动画；*   统计功能则提供了总帧数、总时长、帧大小、延时、帧分辨率等数据的统计；</li><li>在编辑结束后，我们可以根据需求选择适合的类型及编码进行保存；</li><li>到目前为止，ScreenToGif已适配20多种语言，并提供上传服务。</li></ul><h2 id="Over-Ending（结束语）"><a href="#Over-Ending（结束语）" class="headerlink" title="Over Ending（结束语）"></a>Over Ending（结束语）</h2><h4 id="ScreenToGif配置告一段落，其余的相关配置-请自行查看官网，去探索吧，少年"><a href="#ScreenToGif配置告一段落，其余的相关配置-请自行查看官网，去探索吧，少年" class="headerlink" title="ScreenToGif配置告一段落，其余的相关配置 请自行查看官网，去探索吧，少年!"></a>ScreenToGif配置告一段落，其余的相关配置 请自行查看官网，去探索吧，少年!</h4><h3 id="注"><a href="#注" class="headerlink" title="注:"></a>注:</h3><p><strong>如果还有不了解的，可以在右下方与博主在线沟通</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="工具" scheme="https://jasonssun.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="工具" scheme="https://jasonssun.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="ScreenToGif" scheme="https://jasonssun.github.io/tags/ScreenToGif/"/>
    
      <category term="gif动图" scheme="https://jasonssun.github.io/tags/gif%E5%8A%A8%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>Hexo搭建博客NexT主题之嵌入哔哩哔哩视频详细配置</title>
    <link href="https://jasonssun.github.io/2019/06/17/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E4%B9%8B%E5%B5%8C%E5%85%A5%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9%E8%A7%86%E9%A2%91%E8%AF%A6%E7%BB%86%E9%85%8D%E7%BD%AE/"/>
    <id>https://jasonssun.github.io/2019/06/17/Hexo搭建博客NexT主题之嵌入哔哩哔哩视频详细配置/</id>
    <published>2019-06-17T11:36:45.000Z</published>
    <updated>2019-06-22T16:57:57.457Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="效果图："><a href="#效果图：" class="headerlink" title="效果图："></a>效果图：</h2><p> <img src="/2019/06/17/Hexo搭建博客NexT主题之嵌入哔哩哔哩视频详细配置/bilishow.png" alt></p><h2 id="上传哔哩哔哩视频"><a href="#上传哔哩哔哩视频" class="headerlink" title="上传哔哩哔哩视频"></a>上传哔哩哔哩视频</h2><h3 id="1-注册登录哔哩哔哩"><a href="#1-注册登录哔哩哔哩" class="headerlink" title="1.注册登录哔哩哔哩"></a>1.注册登录哔哩哔哩</h3><p> <img src="/2019/06/17/Hexo搭建博客NexT主题之嵌入哔哩哔哩视频详细配置/bilibili.png" alt></p><p> <img src="/2019/06/17/Hexo搭建博客NexT主题之嵌入哔哩哔哩视频详细配置/denglu.png" alt></p><h3 id="2-点击右上角投稿并上传视频-注意请避免图中位置视频审核拥挤，审核时间较长。"><a href="#2-点击右上角投稿并上传视频-注意请避免图中位置视频审核拥挤，审核时间较长。" class="headerlink" title="2.点击右上角投稿并上传视频,注意请避免图中位置视频审核拥挤，审核时间较长。"></a>2.点击右上角投稿并上传视频,注意请避免图中位置视频审核拥挤，审核时间较长。</h3><p><img src="/2019/06/17/Hexo搭建博客NexT主题之嵌入哔哩哔哩视频详细配置/ps1.png" alt></p><p><img src="/2019/06/17/Hexo搭建博客NexT主题之嵌入哔哩哔哩视频详细配置/ps2.png" alt></p><p> <img src="/2019/06/17/Hexo搭建博客NexT主题之嵌入哔哩哔哩视频详细配置/ps3.png" alt></p><h2 id="获取哔哩哔哩视频链接"><a href="#获取哔哩哔哩视频链接" class="headerlink" title="获取哔哩哔哩视频链接"></a>获取哔哩哔哩视频链接</h2><h3 id="1-找到你想要嵌入的视频地址。"><a href="#1-找到你想要嵌入的视频地址。" class="headerlink" title="1.找到你想要嵌入的视频地址。"></a>1.找到你想要嵌入的视频地址。</h3><p> <img src="/2019/06/17/Hexo搭建博客NexT主题之嵌入哔哩哔哩视频详细配置/p1.png" alt></p><h3 id="2-点击分享按钮，弹出分享框，会出现视频地址和嵌入代码链接（此处复制嵌入链接）。"><a href="#2-点击分享按钮，弹出分享框，会出现视频地址和嵌入代码链接（此处复制嵌入链接）。" class="headerlink" title="2.点击分享按钮，弹出分享框，会出现视频地址和嵌入代码链接（此处复制嵌入链接）。"></a>2.点击分享按钮，弹出分享框，会出现视频地址和嵌入代码链接（此处复制嵌入链接）。</h3><p> <img src="/2019/06/17/Hexo搭建博客NexT主题之嵌入哔哩哔哩视频详细配置/p3.png" alt></p><h3 id="3-此处博主将该视频嵌入关于我的页面当中为例（嵌入页面随意），将从哔哩哔哩复制的嵌入链接粘贴到xxx-md文件当中。"><a href="#3-此处博主将该视频嵌入关于我的页面当中为例（嵌入页面随意），将从哔哩哔哩复制的嵌入链接粘贴到xxx-md文件当中。" class="headerlink" title="3.此处博主将该视频嵌入关于我的页面当中为例（嵌入页面随意），将从哔哩哔哩复制的嵌入链接粘贴到xxx.md文件当中。"></a>3.此处博主将该视频嵌入关于我的页面当中为例（嵌入页面随意），将从哔哩哔哩复制的嵌入链接粘贴到xxx.md文件当中。</h3><p> <img src="/2019/06/17/Hexo搭建博客NexT主题之嵌入哔哩哔哩视频详细配置/p4.png" alt></p><p> <img src="/2019/06/17/Hexo搭建博客NexT主题之嵌入哔哩哔哩视频详细配置/p5.png" alt></p><h4 id="注：此处原样粘贴会出现页面不兼容情况"><a href="#注：此处原样粘贴会出现页面不兼容情况" class="headerlink" title="注：此处原样粘贴会出现页面不兼容情况"></a>注：此处原样粘贴会出现页面不兼容情况</h4><p><img src="/2019/06/17/Hexo搭建博客NexT主题之嵌入哔哩哔哩视频详细配置/p7.png" alt></p><h4 id="在复制的哔哩哔哩链接中输入以下代码方可兼容页面"><a href="#在复制的哔哩哔哩链接中输入以下代码方可兼容页面" class="headerlink" title="在复制的哔哩哔哩链接中输入以下代码方可兼容页面"></a><strong>在复制的哔哩哔哩链接中输入以下代码方可兼容页面</strong></h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">style="width: 100%; height: 500px; max-width: 100%；align:center; padding:20px 0;"</span><br></pre></td></tr></table></figure><h2 id="附加："><a href="#附加：" class="headerlink" title="附加："></a>附加：</h2><h4 id="嵌入优酷视频"><a href="#嵌入优酷视频" class="headerlink" title="嵌入优酷视频"></a>嵌入优酷视频</h4><h5 id="1-登录网页版-优酷官网"><a href="#1-登录网页版-优酷官网" class="headerlink" title="1.登录网页版 优酷官网"></a>1.登录网页版 优酷官网</h5><p><img src="/2019/06/17/Hexo搭建博客NexT主题之嵌入哔哩哔哩视频详细配置/y1.png" alt></p><h5 id="2-点开已上传视频，并复制链接，链接粘贴位置同上，此处不用修改页面适应宽度"><a href="#2-点开已上传视频，并复制链接，链接粘贴位置同上，此处不用修改页面适应宽度" class="headerlink" title="2.点开已上传视频，并复制链接，链接粘贴位置同上，此处不用修改页面适应宽度"></a>2.点开已上传视频，并复制链接，链接粘贴位置<code>同上</code>，<strong>此处不用修改页面适应宽度</strong></h5><p><img src="/2019/06/17/Hexo搭建博客NexT主题之嵌入哔哩哔哩视频详细配置/y2.png" alt></p><p><img src="/2019/06/17/Hexo搭建博客NexT主题之嵌入哔哩哔哩视频详细配置/y3.png" alt></p><h4 id="嵌入YouTube视频（注：使用该功能需要梯子）"><a href="#嵌入YouTube视频（注：使用该功能需要梯子）" class="headerlink" title="嵌入YouTube视频（注：使用该功能需要梯子）"></a>嵌入YouTube视频<code>（注：使用该功能需要梯子）</code></h4><h5 id="获取视频链接方式如下："><a href="#获取视频链接方式如下：" class="headerlink" title="获取视频链接方式如下："></a>获取视频链接方式如下：</h5><ul><li><p>找到你想要插入的视频</p></li><li><p>点击右下角的视频链接</p></li><li><p>复制链接即可，粘贴位置（同上）</p></li></ul><p><img src="/2019/06/17/Hexo搭建博客NexT主题之嵌入哔哩哔哩视频详细配置/b1.png" alt></p><p><img src="/2019/06/17/Hexo搭建博客NexT主题之嵌入哔哩哔哩视频详细配置/b2.png" alt></p><p><img src="/2019/06/17/Hexo搭建博客NexT主题之嵌入哔哩哔哩视频详细配置/b3.png" alt></p><h2 id="Over-Ending（结束语）"><a href="#Over-Ending（结束语）" class="headerlink" title="Over Ending（结束语）"></a>Over Ending（结束语）</h2><h4 id="哔哩哔哩视频配置告一段落，其余的相关配置-请自行查看官网，去探索吧，少年"><a href="#哔哩哔哩视频配置告一段落，其余的相关配置-请自行查看官网，去探索吧，少年" class="headerlink" title="哔哩哔哩视频配置告一段落，其余的相关配置 请自行查看官网，去探索吧，少年!"></a>哔哩哔哩视频配置告一段落，其余的相关配置 请自行查看官网，去探索吧，少年!</h4><h3 id="注"><a href="#注" class="headerlink" title="注:"></a>注:</h3><p><strong>如果还有不了解的，可以在右下方与博主在线沟通</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="个人博客" scheme="https://jasonssun.github.io/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="Hexo" scheme="https://jasonssun.github.io/tags/Hexo/"/>
    
      <category term="NexT 7.0+" scheme="https://jasonssun.github.io/tags/NexT-7-0/"/>
    
      <category term="哔哩哔哩" scheme="https://jasonssun.github.io/tags/%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9/"/>
    
      <category term="视频嵌入" scheme="https://jasonssun.github.io/tags/%E8%A7%86%E9%A2%91%E5%B5%8C%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>Navicat12.0.29 数据库连接工具之安装与激活</title>
    <link href="https://jasonssun.github.io/2019/06/16/Naviate-12-0-29-%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E5%B7%A5%E5%85%B7%E4%B9%8B%E5%AE%89%E8%A3%85%E4%B8%8E%E6%BF%80%E6%B4%BB/"/>
    <id>https://jasonssun.github.io/2019/06/16/Naviate-12-0-29-数据库连接工具之安装与激活/</id>
    <published>2019-06-15T18:15:58.000Z</published>
    <updated>2019-07-13T15:35:23.798Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="一、Navicat-Premium-12-下载"><a href="#一、Navicat-Premium-12-下载" class="headerlink" title="一、Navicat Premium 12 下载"></a>一、Navicat Premium 12 下载</h3><p><a href="https://www.navicat.com.cn" target="_blank" rel="noopener">Navicat Premium 12</a>是一套数据库开发管理工具，支持连接 MySQL、Oracle等多种数据库，可以快速轻松地创建、管理和维护数据库。</p><h4 id="Navicat-Premium-12简体中文官方下载"><a href="#Navicat-Premium-12简体中文官方下载" class="headerlink" title="Navicat Premium 12简体中文官方下载"></a><a href="https://www.navicat.com.cn/download/navicat-premium" target="_blank" rel="noopener">Navicat Premium 12简体中文官方下载</a></h4><p><img src="/2019/06/16/Naviate-12-0-29-数据库连接工具之安装与激活/p1.png" alt></p><h3 id="二、蓝奏云下载："><a href="#二、蓝奏云下载：" class="headerlink" title="二、蓝奏云下载："></a>二、蓝奏云下载：</h3><h4 id="Navicat-Premium-12最新版安装包及用户指南，提取密码-RCNJTECH"><a href="#Navicat-Premium-12最新版安装包及用户指南，提取密码-RCNJTECH" class="headerlink" title="Navicat Premium 12最新版安装包及用户指南，提取密码:RCNJTECH"></a><a href="https://www.lanzous.com/b607626/" target="_blank" rel="noopener">Navicat Premium 12最新版安装包及用户指南</a>，提取密码:<code>RCNJTECH</code></h4><h3 id="三、Navicat-Premium-12-安装"><a href="#三、Navicat-Premium-12-安装" class="headerlink" title="三、Navicat Premium 12 安装"></a>三、Navicat Premium 12 安装</h3><p><img src="/2019/06/16/Naviate-12-0-29-数据库连接工具之安装与激活/p2.png" alt></p><p><img src="/2019/06/16/Naviate-12-0-29-数据库连接工具之安装与激活/p3.png" alt></p><p><img src="/2019/06/16/Naviate-12-0-29-数据库连接工具之安装与激活/p4.png" alt></p><p><img src="/2019/06/16/Naviate-12-0-29-数据库连接工具之安装与激活/p5.png" alt></p><h3 id="三、Navicat-Premium-12激活"><a href="#三、Navicat-Premium-12激活" class="headerlink" title="三、Navicat Premium 12激活"></a>三、Navicat Premium 12激活</h3><h4 id="注册机下载：Navicat-Premium-12注册机，提取密码：RCNJTECH"><a href="#注册机下载：Navicat-Premium-12注册机，提取密码：RCNJTECH" class="headerlink" title="注册机下载：Navicat Premium 12注册机，提取密码：RCNJTECH"></a>注册机下载：<a href="https://www.lanzous.com/b607627/" target="_blank" rel="noopener">Navicat Premium 12注册机</a>，提取密码：<code>RCNJTECH</code></h4><h4 id="重要提示：该注册机来源于DeltaFoX（GitHub）。一般来说，由于注册机会修改-exe文件或-dll文件，加壳并且没有数字签名，所以-杀毒软件会报毒-，自行决定是否使用本注册机。如需使用本注册机或者下载后找不到文件，需要关闭杀毒软件或将本注册机添加至杀毒软件白名单。"><a href="#重要提示：该注册机来源于DeltaFoX（GitHub）。一般来说，由于注册机会修改-exe文件或-dll文件，加壳并且没有数字签名，所以-杀毒软件会报毒-，自行决定是否使用本注册机。如需使用本注册机或者下载后找不到文件，需要关闭杀毒软件或将本注册机添加至杀毒软件白名单。" class="headerlink" title="重要提示：该注册机来源于DeltaFoX（GitHub）。一般来说，由于注册机会修改.exe文件或.dll文件，加壳并且没有数字签名，所以_杀毒软件会报毒_，自行决定是否使用本注册机。如需使用本注册机或者下载后找不到文件，需要关闭杀毒软件或将本注册机添加至杀毒软件白名单。"></a>重要提示：该注册机来源于<a href="https://dfox.it/DeFconX/files/file/79-navicat-software/" target="_blank" rel="noopener">DeltaFoX</a>（<a href="https://github.com/Deltafox79/Navicat_Keygen" target="_blank" rel="noopener">GitHub</a>）。一般来说，由于注册机会修改.exe文件或.dll文件，加壳并且没有数字签名，所以_杀毒软件会报毒_，自行决定是否使用本注册机。如需使用本注册机或者下载后找不到文件，需要关闭杀毒软件或将本注册机添加至杀毒软件白名单。</h4><h3 id="1-以管理员身份运行注册机"><a href="#1-以管理员身份运行注册机" class="headerlink" title="1.以管理员身份运行注册机"></a>1.以管理员身份运行注册机</h3><h4 id="确保图中内容已勾选，且勾选正确"><a href="#确保图中内容已勾选，且勾选正确" class="headerlink" title="确保图中内容已勾选，且勾选正确"></a>确保图中内容已勾选，且勾选正确</h4><p><img src="/2019/06/16/Naviate-12-0-29-数据库连接工具之安装与激活/p6.png" alt></p><h3 id="2-点击Patch-选择已安装Navicate-exe文件"><a href="#2-点击Patch-选择已安装Navicate-exe文件" class="headerlink" title="2. 点击Patch 选择已安装Navicate.exe文件"></a>2. 点击Patch 选择已安装Navicate.exe文件</h3><p><img src="/2019/06/16/Naviate-12-0-29-数据库连接工具之安装与激活/p7.png" alt><br><img src="/2019/06/16/Naviate-12-0-29-数据库连接工具之安装与激活/p8.png" alt><br>此时会弹出 <code>navicat.exe - x64 -&gt; Cracked.</code> </p><hr><h5 id="若提示libcc-dll或navicat-exe出错，检查是否未关闭Navicat-Premium，或到安装目录下将libcc-dll和navicat-exe删除，并将libcc-dll-BAK或navicat-exe-BAK去掉-BAK后缀名。否则卸载已安装的Navicat-Premium并清理文件残留和注册表残留："><a href="#若提示libcc-dll或navicat-exe出错，检查是否未关闭Navicat-Premium，或到安装目录下将libcc-dll和navicat-exe删除，并将libcc-dll-BAK或navicat-exe-BAK去掉-BAK后缀名。否则卸载已安装的Navicat-Premium并清理文件残留和注册表残留：" class="headerlink" title="若提示libcc.dll或navicat.exe出错，检查是否未关闭Navicat Premium，或到安装目录下将libcc.dll和navicat.exe删除，并将libcc.dll.BAK或navicat.exe.BAK去掉.BAK后缀名。否则卸载已安装的Navicat Premium并清理文件残留和注册表残留："></a>若提示<code>libcc.dll</code>或<code>navicat.exe</code>出错，检查是否未关闭Navicat Premium，或到安装目录下将<code>libcc.dll</code>和<code>navicat.exe</code>删除，并将<code>libcc.dll.BAK</code>或<code>navicat.exe.BAK</code>去掉<code>.BAK</code>后缀名。否则卸载已安装的Navicat Premium并清理文件残留和注册表残留：</h5><hr><h2 id="此时并未结束"><a href="#此时并未结束" class="headerlink" title="此时并未结束"></a><strong>此时并未结束</strong></h2><h3 id="3-此时可以输入任何内容或直接点击Generate生成序列号。"><a href="#3-此时可以输入任何内容或直接点击Generate生成序列号。" class="headerlink" title="3.此时可以输入任何内容或直接点击Generate生成序列号。"></a>3.此时可以输入任何内容或直接点击Generate生成序列号。</h3><p><img src="/2019/06/16/Naviate-12-0-29-数据库连接工具之安装与激活/p9.png" alt></p><p>此时点开安装好的Navicate,点击立即注册,立即激活<br><img src="/2019/06/16/Naviate-12-0-29-数据库连接工具之安装与激活/p10.png" alt><br><img src="/2019/06/16/Naviate-12-0-29-数据库连接工具之安装与激活/p11.png" alt><br>弹出提示框后-&gt;手动激活<br><img src="/2019/06/16/Naviate-12-0-29-数据库连接工具之安装与激活/p12.png" alt></p><h3 id="4-将弹出框的内容如图所示复制到注册机中相应位置并点击Generate生成激活码。"><a href="#4-将弹出框的内容如图所示复制到注册机中相应位置并点击Generate生成激活码。" class="headerlink" title="4.将弹出框的内容如图所示复制到注册机中相应位置并点击Generate生成激活码。"></a>4.将弹出框的内容如图所示复制到注册机中相应位置并点击Generate生成激活码。</h3><p><img src="/2019/06/16/Naviate-12-0-29-数据库连接工具之安装与激活/p13.png" alt></p><hr><blockquote><p>经测试（博主激活下列软件，目前12.1.20注册机尚未发布）<br><strong>注册机版本（Navicat Premium 12 注册机 V5.0.exe）<br>Navicate版本（Navicat Premium 12.1.19.0 简体中文 64位.exe）</strong><br>（若此处出现错误，要么你未完全按照教程来，要么你所安装的版本高于注册机所支持的版本）</p></blockquote><hr><h3 id="5-点击Generate会自动将注册码提交到左侧下栏中去，此时点击左侧窗口激活按钮，即激活成功。"><a href="#5-点击Generate会自动将注册码提交到左侧下栏中去，此时点击左侧窗口激活按钮，即激活成功。" class="headerlink" title="5.点击Generate会自动将注册码提交到左侧下栏中去，此时点击左侧窗口激活按钮，即激活成功。"></a>5.点击Generate会自动将注册码提交到左侧下栏中去，此时点击左侧窗口激活按钮，即激活成功。</h3><p><img src="/2019/06/16/Naviate-12-0-29-数据库连接工具之安装与激活/p14.png" alt><br><img src="/2019/06/16/Naviate-12-0-29-数据库连接工具之安装与激活/p15.png" alt></p><h3 id="附加："><a href="#附加：" class="headerlink" title="附加："></a>附加：</h3><h3 id="数据库连接博主就不在此进行细说。"><a href="#数据库连接博主就不在此进行细说。" class="headerlink" title="数据库连接博主就不在此进行细说。"></a>数据库连接博主就不在此进行细说。</h3><p>本文参考 （<a href="https://www.jianshu.com/p/5f693b4c9468" target="_blank" rel="noopener">丿记忆灬永殇的简书</a>）</p><h5 id="感谢原作者对Navicate的不同版本创造的注册机。"><a href="#感谢原作者对Navicate的不同版本创造的注册机。" class="headerlink" title="感谢原作者对Navicate的不同版本创造的注册机。"></a>感谢原作者对Navicate的不同版本创造的注册机。</h5>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="数据库" scheme="https://jasonssun.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="工具" scheme="https://jasonssun.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Navicate" scheme="https://jasonssun.github.io/tags/Navicate/"/>
    
      <category term="工具" scheme="https://jasonssun.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Hexo搭建博客NexT主题之无法对代码(Code)进行复制的问题</title>
    <link href="https://jasonssun.github.io/2019/06/16/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E4%B9%8B%E6%97%A0%E6%B3%95%E5%AF%B9%E4%BB%A3%E7%A0%81-Code-%E8%BF%9B%E8%A1%8C%E5%A4%8D%E5%88%B6%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>https://jasonssun.github.io/2019/06/16/Hexo搭建博客NexT主题之无法对代码-Code-进行复制的问题/</id>
    <published>2019-06-15T16:57:28.000Z</published>
    <updated>2019-06-17T14:13:11.688Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Hexo-NexT-复制代码操作"><a href="#Hexo-NexT-复制代码操作" class="headerlink" title="Hexo NexT 复制代码操作"></a>Hexo NexT 复制代码操作</h2><h2 id="效果图："><a href="#效果图：" class="headerlink" title="效果图："></a>效果图：</h2><p><img src="/2019/06/16/Hexo搭建博客NexT主题之无法对代码-Code-进行复制的问题/showcopy.png" alt></p><h3 id="1-下载-clipboard-js"><a href="#1-下载-clipboard-js" class="headerlink" title="1.下载 clipboard.js"></a>1.下载 clipboard.js</h3><h4 id="第三方插件，相关介绍和兼容性可通过clipboard主页或clipboard-github了解。"><a href="#第三方插件，相关介绍和兼容性可通过clipboard主页或clipboard-github了解。" class="headerlink" title="第三方插件，相关介绍和兼容性可通过clipboard主页或clipboard-github了解。"></a>第三方插件，相关介绍和兼容性可通过<a href="https://clipboardjs.com/" target="_blank" rel="noopener">clipboard主页</a>或<a href="https://github.com/zenorocha/clipboard.js" target="_blank" rel="noopener">clipboard-github</a>了解。</h4><h3 id="2-下载地址如下，同样在链接上方右键-gt-链接另存为-themes-next-source-js-src该目录下。"><a href="#2-下载地址如下，同样在链接上方右键-gt-链接另存为-themes-next-source-js-src该目录下。" class="headerlink" title="2.下载地址如下，同样在链接上方右键-&gt;链接另存为\themes\next\source\js\src该目录下。"></a>2.下载地址如下，同样在链接上方右键-&gt;链接另存为<code>\themes\next\source\js\src</code>该目录下。</h3><ul><li><strong><a href="https://raw.githubusercontent.com/zenorocha/clipboard.js/master/dist/clipboard.js" target="_blank" rel="noopener">clipboard.js</a></strong></li><li><strong><a href="https://raw.githubusercontent.com/zenorocha/clipboard.js/master/dist/clipboard.min.js" target="_blank" rel="noopener">clipboard.min.js</a>    推荐使用</strong></li></ul><h3 id="3-使用方法"><a href="#3-使用方法" class="headerlink" title="3.使用方法"></a>3.使用方法</h3><h4 id="1-在-themes-next-source-js-src目录下，创建clipboard-use-js，文件内容如下："><a href="#1-在-themes-next-source-js-src目录下，创建clipboard-use-js，文件内容如下：" class="headerlink" title="1.在\themes\next\source\js\src目录下，创建clipboard-use.js，文件内容如下："></a>1.在<code>\themes\next\source\js\src</code>目录下，创建<code>clipboard-use.js</code>，文件内容如下：</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">!function (e, t, a) &#123; </span><br><span class="line">  var initCopyCode = function()&#123;</span><br><span class="line">    var copyHtml = '';</span><br><span class="line">    copyHtml += '<span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn-copy"</span> <span class="attr">data-clipboard-snippet</span>=<span class="string">""</span>&gt;</span>';</span><br><span class="line">    copyHtml += '  <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-globe"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>copy<span class="tag">&lt;/<span class="name">span</span>&gt;</span>';</span><br><span class="line">    copyHtml += '<span class="tag">&lt;/<span class="name">button</span>&gt;</span>';</span><br><span class="line">    $(".highlight .code pre").before(copyHtml);</span><br><span class="line">    new ClipboardJS('.btn-copy', &#123;</span><br><span class="line">        target: function(trigger) &#123;</span><br><span class="line">            return trigger.nextElementSibling;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  initCopyCode();</span><br><span class="line">&#125;(window, document);</span><br></pre></td></tr></table></figure><h4 id="2-在-themes-next-source-css-custom-custom-styl样式文件中添加下面代码："><a href="#2-在-themes-next-source-css-custom-custom-styl样式文件中添加下面代码：" class="headerlink" title="2.在\themes\next\source\css\_custom\custom.styl样式文件中添加下面代码："></a>2.在<code>\themes\next\source\css\_custom\custom.styl</code>样式文件中添加下面代码：</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">.highlight&#123;</span><br><span class="line">  position: relative;</span><br><span class="line">&#125;</span><br><span class="line">.btn-copy &#123;</span><br><span class="line">    display: inline-block;</span><br><span class="line">    cursor: pointer;</span><br><span class="line">    background-color: #eee;</span><br><span class="line">    background-image: linear-gradient(#fcfcfc,#eee);</span><br><span class="line">    border: 1px solid #d5d5d5;</span><br><span class="line">    border-radius: 3px;</span><br><span class="line">    -webkit-user-select: none;</span><br><span class="line">    -moz-user-select: none;</span><br><span class="line">    -ms-user-select: none;</span><br><span class="line">    user-select: none;</span><br><span class="line">    -webkit-appearance: none;</span><br><span class="line">    font-size: 13px;</span><br><span class="line">    font-weight: 700;</span><br><span class="line">    line-height: 20px;</span><br><span class="line">    color: #333;</span><br><span class="line">    -webkit-transition: opacity .3s ease-in-out;</span><br><span class="line">    -o-transition: opacity .3s ease-in-out;</span><br><span class="line">    transition: opacity .3s ease-in-out;</span><br><span class="line">    padding: 2px 6px;</span><br><span class="line">    position: absolute;</span><br><span class="line">    right: 5px;</span><br><span class="line">    top: 5px;</span><br><span class="line">    opacity: 0;</span><br><span class="line">&#125;</span><br><span class="line">.btn-copy span &#123;</span><br><span class="line">    margin-left: 5px;</span><br><span class="line">&#125;</span><br><span class="line">.highlight:hover .btn-copy&#123;</span><br><span class="line">  opacity: 1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-引用代码"><a href="#4-引用代码" class="headerlink" title="4.引用代码"></a>4.引用代码</h3><p>在<code>\themes\next\layout\_layout.swig</code>文件中引用位置如图：<img src="/2019/06/16/Hexo搭建博客NexT主题之无法对代码-Code-进行复制的问题/showarea.png" alt></p><p>代码如下:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 复制代码操作 --&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"/js/src/clipboard.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"/js/src/clipboard-use.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Over-Ending（结束语）"><a href="#Over-Ending（结束语）" class="headerlink" title="Over Ending（结束语）"></a>Over Ending（结束语）</h2><h4 id="clipboard配置告一段落，其余的相关配置-请自行查看官网，去探索吧，少年"><a href="#clipboard配置告一段落，其余的相关配置-请自行查看官网，去探索吧，少年" class="headerlink" title="clipboard配置告一段落，其余的相关配置 请自行查看官网，去探索吧，少年!"></a>clipboard配置告一段落，其余的相关配置 请自行查看官网，去探索吧，少年!</h4><h3 id="注"><a href="#注" class="headerlink" title="注:"></a>注:</h3><p><strong>如果还有不了解的，可以在右下方与博主在线沟通</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="个人博客之BUG" scheme="https://jasonssun.github.io/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8BBUG/"/>
    
    
      <category term="Hexo" scheme="https://jasonssun.github.io/tags/Hexo/"/>
    
      <category term="NexT 7.0+" scheme="https://jasonssun.github.io/tags/NexT-7-0/"/>
    
  </entry>
  
  <entry>
    <title>Hexo搭建博客NexT主题之LeanCloud+Valine评论系统的配置</title>
    <link href="https://jasonssun.github.io/2019/06/15/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E4%B9%8BLeanCloud-Valine%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%85%8D%E7%BD%AE/"/>
    <id>https://jasonssun.github.io/2019/06/15/Hexo搭建博客NexT主题之LeanCloud-Valine评论系统的配置/</id>
    <published>2019-06-15T15:51:07.000Z</published>
    <updated>2019-06-22T16:57:50.896Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="效果图："><a href="#效果图：" class="headerlink" title="效果图："></a>效果图：</h2><p><img src="/2019/06/15/Hexo搭建博客NexT主题之LeanCloud-Valine评论系统的配置/valineshow.png" alt> </p><h2 id="LeanCloud官网"><a href="#LeanCloud官网" class="headerlink" title="LeanCloud官网"></a>LeanCloud官网</h2><h3 id="1-搭建评论系统需要先注册LeanCloud账号获取一些必要信息。"><a href="#1-搭建评论系统需要先注册LeanCloud账号获取一些必要信息。" class="headerlink" title="1. 搭建评论系统需要先注册LeanCloud账号获取一些必要信息。"></a>1. 搭建评论系统需要先注册<a href="https://leancloud.cn/" target="_blank" rel="noopener">LeanCloud</a>账号获取一些必要信息。</h3><p><img src="/2019/06/15/Hexo搭建博客NexT主题之LeanCloud-Valine评论系统的配置/p2.png" alt> </p><h3 id="2-注册成功后，点击右上角控制台-进入控制台创建应用，应用名称随意选择开发版，创建应用并点击所创建的应用名称进入管理界面。"><a href="#2-注册成功后，点击右上角控制台-进入控制台创建应用，应用名称随意选择开发版，创建应用并点击所创建的应用名称进入管理界面。" class="headerlink" title="2. 注册成功后，点击右上角控制台,进入控制台创建应用，应用名称随意选择开发版，创建应用并点击所创建的应用名称进入管理界面。"></a>2. 注册成功后，点击右上角<code>控制台</code>,进入控制台创建应用，应用名称随意选择开发版，创建应用并点击所创建的应用名称进入管理界面。</h3><p><img src="/2019/06/15/Hexo搭建博客NexT主题之LeanCloud-Valine评论系统的配置/p1.png" alt><br><img src="/2019/06/15/Hexo搭建博客NexT主题之LeanCloud-Valine评论系统的配置/p3.png" alt> </p><h3 id="3-创建Class名称必须为Comment的Class方可存储评论内容。当然可以定义其他的Class但是无效，系统会自动创建CommentClass来存储。"><a href="#3-创建Class名称必须为Comment的Class方可存储评论内容。当然可以定义其他的Class但是无效，系统会自动创建CommentClass来存储。" class="headerlink" title="3.创建Class名称必须为Comment的Class方可存储评论内容。当然可以定义其他的Class但是无效，系统会自动创建CommentClass来存储。"></a>3.创建Class名称<code>必须为</code>Comment的Class方可存储评论内容。当然可以定义其他的Class但是无效，系统会自动创建<code>Comment</code>Class来存储。</h3><p><img src="/2019/06/15/Hexo搭建博客NexT主题之LeanCloud-Valine评论系统的配置/p4.png" alt> </p><h3 id="4-按照图示，第一步进入设置页面，第二步除服务开关的数据存储以外其他的全部关闭，第三步设置你的网站的地址（Https-xxxx-github-io）。"><a href="#4-按照图示，第一步进入设置页面，第二步除服务开关的数据存储以外其他的全部关闭，第三步设置你的网站的地址（Https-xxxx-github-io）。" class="headerlink" title="4.按照图示，第一步进入设置页面，第二步除服务开关的数据存储以外其他的全部关闭，第三步设置你的网站的地址（Https://xxxx.github.io）。"></a>4.按照图示，第一步进入设置页面，第二步除服务开关的数据存储以外其他的全部关闭，第三步设置你的网站的地址（Https://xxxx.github.io）。</h3><p><img src="/2019/06/15/Hexo搭建博客NexT主题之LeanCloud-Valine评论系统的配置/p5.png" alt></p><h3 id="5-在同一界面，选择应用Key选项，这里的-App-ID-、App-Key是我们接下来的主题配置文件所需要的。"><a href="#5-在同一界面，选择应用Key选项，这里的-App-ID-、App-Key是我们接下来的主题配置文件所需要的。" class="headerlink" title="5.在同一界面，选择应用Key选项，这里的 App ID 、App Key是我们接下来的主题配置文件所需要的。"></a>5.在同一界面，选择应用Key选项，这里的 <strong>App ID</strong> 、<strong>App Key</strong>是我们接下来的主题配置文件所需要的。</h3><p> <img src="/2019/06/15/Hexo搭建博客NexT主题之LeanCloud-Valine评论系统的配置/p6.png" alt></p><h2 id="Valine配置"><a href="#Valine配置" class="headerlink" title="Valine配置"></a>Valine配置</h2><h3 id="1-首先下载最新的-Valine-min-js-核心代码库到本地。在页面上js上方右键链接另存为某一位置，最终Valine-min-js-放置于next-source-js-src"><a href="#1-首先下载最新的-Valine-min-js-核心代码库到本地。在页面上js上方右键链接另存为某一位置，最终Valine-min-js-放置于next-source-js-src" class="headerlink" title="1.首先下载最新的 Valine.min.js 核心代码库到本地。在页面上js上方右键链接另存为某一位置，最终Valine.min.js 放置于next\source\js\src\ "></a>1.首先下载最新的 <a href="https://cdn.jsdelivr.net/npm/valine@1.1.9-beta9/dist/" target="_blank" rel="noopener">Valine.min.js</a> 核心代码库到本地。在页面上js上方右键链接另存为某一位置，最终<code>Valine.min.js</code> 放置于<code>next\source\js\src\</code> <img src="/2019/06/15/Hexo搭建博客NexT主题之LeanCloud-Valine评论系统的配置/p7.png" alt></h3><h3 id="2-打开valine配置文件进行配置"><a href="#2-打开valine配置文件进行配置" class="headerlink" title="2.打开valine配置文件进行配置"></a>2.打开valine配置文件进行配置</h3><p>valine配置文件路径：<code>next\layout\_third-party\comments\valine.swig</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.valine.enable and theme.valine.appid and theme.valine.appkey %&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//cdn1.lncld.net/static/js/3.0.4/av-min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//unjkp.com/valine/dist/Valine.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>  //删除Valine核心代码库外链调用</span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/js/src/Valine.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>  //调用刚下载的本地文件以加速加载速度</span><br><span class="line"></span><br><span class="line">  &#123;% set valine_uri = '/js/src/Valine.min.js' %&#125;  //这里改为从本地加载</span><br><span class="line">  &#123;% if theme.vendors.valine %&#125;</span><br><span class="line">    &#123;% set valine_uri = theme.vendors.valine %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; valine_uri &#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line">    var GUEST = ['nick','mail','link'];</span><br><span class="line">    var guest = '&#123;&#123; theme.valine.guest_info &#125;&#125;';</span><br><span class="line">    guest = guest.split(',').filter(function (item) &#123;</span><br><span class="line">      return GUEST.indexOf(item)&gt;-1;</span><br><span class="line">    &#125;);</span><br><span class="line">    new Valine(&#123;</span><br><span class="line">        el: '#comments' ,</span><br><span class="line">        verify: &#123;&#123; theme.valine.verify &#125;&#125;,</span><br><span class="line">        notify: &#123;&#123; theme.valine.notify &#125;&#125;,</span><br><span class="line">        appId: '&#123;&#123; theme.valine.appid &#125;&#125;',</span><br><span class="line">        appKey: '&#123;&#123; theme.valine.appkey &#125;&#125;',</span><br><span class="line">        placeholder: '&#123;&#123; theme.valine.placeholder &#125;&#125;',</span><br><span class="line">        avatar:'&#123;&#123; theme.valine.avatar &#125;&#125;',</span><br><span class="line">        guest_info:['nick'] ,  //评论者只需要提供评论的昵称即可</span><br><span class="line">        pageSize:'&#123;&#123; theme.valine.pageSize &#125;&#125;' || 10,</span><br><span class="line">    &#125;);</span><br><span class="line">    //增加以下六行代码去除 power by valine</span><br><span class="line">    var infoEle = document.querySelector('#comments .info');</span><br><span class="line">    if (infoEle &amp;&amp; infoEle.childNodes &amp;&amp; infoEle.childNodes.length &gt; 0)&#123;</span><br><span class="line">      infoEle.childNodes.forEach(function(item) &#123;</span><br><span class="line">        item.parentNode.removeChild(item);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><h2 id="主题配置文件配置"><a href="#主题配置文件配置" class="headerlink" title="主题配置文件配置"></a>主题配置文件配置</h2><p>主题配置文件路径：<code>next\_config.yml</code><br>打开<code>_config.yml</code>使用Ctrl+F搜索到valine<br>进行如下配置：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># Valine.</span><br><span class="line"># You can get your appid and appkey from https://leancloud.cn</span><br><span class="line"># more info please open https://valine.js.org</span><br><span class="line">valine:</span><br><span class="line">  enable: true //打开valine评论功能</span><br><span class="line">  appid: 你的leancloud appid </span><br><span class="line">  appkey: 你的leancloud appkey </span><br><span class="line">  notify: false //邮件提醒</span><br><span class="line">  verify: true //评论时是否有验证码，需要在Leancloud 设置-&gt;安全中心 中打开</span><br><span class="line">  placeholder: 说点什么吧！ //评论框默认显示</span><br><span class="line">  avatar: hide //评论者的头像,我这里设置的不显示</span><br><span class="line">  guest_info: nick # custom comment header</span><br><span class="line">  pageSize: 10 # pagination size</span><br></pre></td></tr></table></figure><h2 id="附加内容"><a href="#附加内容" class="headerlink" title="附加内容"></a>附加内容</h2><h3 id="评论者头像可以进行如下设置："><a href="#评论者头像可以进行如下设置：" class="headerlink" title="评论者头像可以进行如下设置："></a>评论者头像可以进行如下设置：</h3><p> <img src="/2019/06/15/Hexo搭建博客NexT主题之LeanCloud-Valine评论系统的配置/p8.png" alt></p><hr><p>Valine目前使用的是<a href="http://cn.gravatar.com/" target="_blank" rel="noopener">Gravatar</a>作为评论列表头像。</p><p>请自行登录或注册<a href="http://cn.gravatar.com/" target="_blank" rel="noopener">Gravatar</a>，然后修改自己的头像。</p><p>评论的时候，留下在<a href="http://cn.gravatar.com/" target="_blank" rel="noopener">的Gravatar</a>注册时所使用的邮箱即可。</p><p>感谢<code>gravatar.cat.net</code>提供的它的镜像就是服务。</p><blockquote><p>如果你修改了头像后发现没有更新，请不要慌张，因为<code>gravatar.cat.net</code>有七天的缓存网络出版总库，安静的等待吧〜</p></blockquote><hr><h2 id="Over-Ending（结束语）"><a href="#Over-Ending（结束语）" class="headerlink" title="Over Ending（结束语）"></a>Over Ending（结束语）</h2><h4 id="AddThis-配置告一段落，其余的AddThis-请在官网自行配置，自己去探索吧"><a href="#AddThis-配置告一段落，其余的AddThis-请在官网自行配置，自己去探索吧" class="headerlink" title="AddThis 配置告一段落，其余的AddThis 请在官网自行配置，自己去探索吧!"></a>AddThis 配置告一段落，其余的AddThis 请在官网自行配置，自己去探索吧!</h4><h3 id="注"><a href="#注" class="headerlink" title="注:"></a>注:</h3><p><strong>如果还有不了解的，可以在右下方与博主在线沟通</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="个人博客" scheme="https://jasonssun.github.io/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="Hexo" scheme="https://jasonssun.github.io/tags/Hexo/"/>
    
      <category term="NexT 7.0+" scheme="https://jasonssun.github.io/tags/NexT-7-0/"/>
    
      <category term="LeanCloud" scheme="https://jasonssun.github.io/tags/LeanCloud/"/>
    
      <category term="Valine" scheme="https://jasonssun.github.io/tags/Valine/"/>
    
  </entry>
  
  <entry>
    <title>Hexo搭建博客NexT主题之AddThis分享文章的配置</title>
    <link href="https://jasonssun.github.io/2019/06/15/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E4%B9%8BAddThis%E5%88%86%E4%BA%AB%E6%96%87%E7%AB%A0%E7%9A%84%E9%85%8D%E7%BD%AE/"/>
    <id>https://jasonssun.github.io/2019/06/15/Hexo搭建博客NexT主题之AddThis分享文章的配置/</id>
    <published>2019-06-15T12:45:52.000Z</published>
    <updated>2019-06-22T16:57:50.896Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="效果图："><a href="#效果图：" class="headerlink" title="效果图："></a>效果图：</h2><p><img src="/2019/06/15/Hexo搭建博客NexT主题之AddThis分享文章的配置/AddThisShow.png" alt> </p><h2 id="使用ThemeNexT主题集成AddThis-Turn-your-visitors-into-engagedcustomers"><a href="#使用ThemeNexT主题集成AddThis-Turn-your-visitors-into-engagedcustomers" class="headerlink" title="使用ThemeNexT主题集成AddThis- Turn your visitors into engagedcustomers."></a>使用ThemeNexT主题集成AddThis- Turn your visitors into engagedcustomers.</h2><h2 id="AddThis官网配置"><a href="#AddThis官网配置" class="headerlink" title="AddThis官网配置"></a>AddThis官网配置</h2><h3 id="1-首先点击AddThis至官网注册账号"><a href="#1-首先点击AddThis至官网注册账号" class="headerlink" title="1.首先点击AddThis至官网注册账号"></a>1.首先点击<a href="https://www.addthis.com/" target="_blank" rel="noopener">AddThis</a>至官网注册账号</h3><p>如下图：<br><img src="/2019/06/15/Hexo搭建博客NexT主题之AddThis分享文章的配置/p1.png" alt> </p><h3 id="2-进入注册界面后进行住注册，当然国家country当然是选择China啦！"><a href="#2-进入注册界面后进行住注册，当然国家country当然是选择China啦！" class="headerlink" title="2.进入注册界面后进行住注册，当然国家country当然是选择China啦！"></a>2.进入注册界面后进行住注册，当然国家country当然是选择China啦！</h3><p><img src="/2019/06/15/Hexo搭建博客NexT主题之AddThis分享文章的配置/p2.png" alt> </p><h3 id="3-选择一种工具类型（Select-a-Tool）-我们选择第一种（Share-Button）分享按钮。"><a href="#3-选择一种工具类型（Select-a-Tool）-我们选择第一种（Share-Button）分享按钮。" class="headerlink" title="3.选择一种工具类型（Select a Tool）,我们选择第一种（Share Button）分享按钮。"></a>3.选择一种工具类型（Select a Tool）,我们选择第一种（Share Button）分享按钮。</h3><p><img src="/2019/06/15/Hexo搭建博客NexT主题之AddThis分享文章的配置/p3.png" alt> </p><h3 id="3-选择显示样式-Select-a-Tool-Type-AddThis提供了7种显示样式-你可以更加左边菜单栏点击-右边会自动显示你选择的相应样式。值得注意的是。在其右上角可以切换PC和Phone显示"><a href="#3-选择显示样式-Select-a-Tool-Type-AddThis提供了7种显示样式-你可以更加左边菜单栏点击-右边会自动显示你选择的相应样式。值得注意的是。在其右上角可以切换PC和Phone显示" class="headerlink" title="3.选择显示样式(Select a Tool Type),AddThis提供了7种显示样式,你可以更加左边菜单栏点击,右边会自动显示你选择的相应样式。值得注意的是。在其右上角可以切换PC和Phone显示"></a>3.选择显示样式(Select a Tool Type),<code>AddThis</code>提供了7种显示样式,你可以更加左边菜单栏点击,右边会自动显示你选择的相应样式。值得注意的是。在其右上角可以切换<code>PC</code>和<code>Phone</code>显示</h3><p><img src="/2019/06/15/Hexo搭建博客NexT主题之AddThis分享文章的配置/p4.png" alt> </p><h3 id="4-选择Continue之后进入分享样式设计界面。第一个可以设计你要显示的主要应用，第二个设计在手机上的显示样式和大小，第三个设计分享计数器针对个人等选项，第四个设计分享组合的位置，宽度，偏移量，第五个用来设置该分享是否要显示在主页上等配置。"><a href="#4-选择Continue之后进入分享样式设计界面。第一个可以设计你要显示的主要应用，第二个设计在手机上的显示样式和大小，第三个设计分享计数器针对个人等选项，第四个设计分享组合的位置，宽度，偏移量，第五个用来设置该分享是否要显示在主页上等配置。" class="headerlink" title="4.选择Continue之后进入分享样式设计界面。第一个可以设计你要显示的主要应用，第二个设计在手机上的显示样式和大小，第三个设计分享计数器针对个人等选项，第四个设计分享组合的位置，宽度，偏移量，第五个用来设置该分享是否要显示在主页上等配置。"></a>4.选择Continue之后进入分享样式设计界面。第一个可以设计你要显示的主要应用，第二个设计在手机上的显示样式和大小，第三个设计分享计数器针对个人等选项，第四个设计分享组合的位置，宽度，偏移量，第五个用来设置该分享是否要显示在主页上等配置。</h3><p>如图：<br><img src="/2019/06/15/Hexo搭建博客NexT主题之AddThis分享文章的配置/p5.png" alt> </p><h3 id="5-设置完成后进入该页面选择仅代码视图打开，可以看到生成的代码，从而获取主题配置文件所需add-this-id也就是当前页面的pubid。"><a href="#5-设置完成后进入该页面选择仅代码视图打开，可以看到生成的代码，从而获取主题配置文件所需add-this-id也就是当前页面的pubid。" class="headerlink" title="5.设置完成后进入该页面选择仅代码视图打开，可以看到生成的代码，从而获取主题配置文件所需add_this_id也就是当前页面的pubid。"></a>5.设置完成后进入该页面选择仅代码视图打开，可以看到生成的代码，从而获取主题配置文件所需<code>add_this_id</code>也就是当前页面的<code>pubid</code>。</h3><p><img src="/2019/06/15/Hexo搭建博客NexT主题之AddThis分享文章的配置/p6.png" alt> </p><h3 id="6-点击之前页面左上角的工具菜单栏进行配置，红框中即为刚才配置的分享按钮，点击箭头指向的定位规则配置要显示的网站。"><a href="#6-点击之前页面左上角的工具菜单栏进行配置，红框中即为刚才配置的分享按钮，点击箭头指向的定位规则配置要显示的网站。" class="headerlink" title="6.点击之前页面左上角的工具菜单栏进行配置，红框中即为刚才配置的分享按钮，点击箭头指向的定位规则配置要显示的网站。"></a>6.点击之前页面左上角的工具菜单栏进行配置，红框中即为刚才配置的分享按钮，点击箭头指向的定位规则配置要显示的网站。</h3><p><img src="/2019/06/15/Hexo搭建博客NexT主题之AddThis分享文章的配置/p7.png" alt> </p><h3 id="7-点击定位规则添加定位规则配置，选择最右边的获取分享按钮，点击观众开始进行你想要的网站配置信息，设置完成后保存并激活，官网配置完成。"><a href="#7-点击定位规则添加定位规则配置，选择最右边的获取分享按钮，点击观众开始进行你想要的网站配置信息，设置完成后保存并激活，官网配置完成。" class="headerlink" title="7.点击定位规则添加定位规则配置，选择最右边的获取分享按钮，点击观众开始进行你想要的网站配置信息，设置完成后保存并激活，官网配置完成。"></a>7.点击定位规则添加定位规则配置，选择最右边的获取分享按钮，点击观众开始进行你想要的网站配置信息，设置完成后保存并激活，官网配置完成。</h3><p>如图：<br><img src="/2019/06/15/Hexo搭建博客NexT主题之AddThis分享文章的配置/p8.png" alt><br><img src="/2019/06/15/Hexo搭建博客NexT主题之AddThis分享文章的配置/p9.png" alt><br><img src="/2019/06/15/Hexo搭建博客NexT主题之AddThis分享文章的配置/p10.png" alt> </p><h2 id="配置主题文件"><a href="#配置主题文件" class="headerlink" title="配置主题文件"></a>配置主题文件</h2><p>在<code>_config.yml</code>文件Ctrl+F 搜索 <code>add_this_id</code>配置官网中获得的<code>pubid</code>（建议RA采用小写ra）</p><p>配置如图：<br><img src="/2019/06/15/Hexo搭建博客NexT主题之AddThis分享文章的配置/p11.png" alt> </p><h2 id="Over-Ending（结束语）"><a href="#Over-Ending（结束语）" class="headerlink" title="Over Ending（结束语）"></a>Over Ending（结束语）</h2><h4 id="AddThis-配置告一段落，其余的AddThis-请在官网自行配置，自己去探索吧"><a href="#AddThis-配置告一段落，其余的AddThis-请在官网自行配置，自己去探索吧" class="headerlink" title="AddThis 配置告一段落，其余的AddThis 请在官网自行配置，自己去探索吧!"></a>AddThis 配置告一段落，其余的AddThis 请在官网自行配置，自己去探索吧!</h4><h3 id="注"><a href="#注" class="headerlink" title="注:"></a>注:</h3><p><strong>如果还有不了解的，可以在右下方与博主在线沟通</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="个人博客" scheme="https://jasonssun.github.io/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="Hexo" scheme="https://jasonssun.github.io/tags/Hexo/"/>
    
      <category term="NexT 7.0+" scheme="https://jasonssun.github.io/tags/NexT-7-0/"/>
    
      <category term="AddThis" scheme="https://jasonssun.github.io/tags/AddThis/"/>
    
  </entry>
  
  <entry>
    <title>Hexo搭建博客NexT主题之在线聊天DaoVoice配置</title>
    <link href="https://jasonssun.github.io/2019/06/15/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E4%B9%8B%E5%9C%A8%E7%BA%BF%E8%81%8A%E5%A4%A9DaoVoice%E9%85%8D%E7%BD%AE/"/>
    <id>https://jasonssun.github.io/2019/06/15/Hexo搭建博客NexT主题之在线聊天DaoVoice配置/</id>
    <published>2019-06-15T05:58:19.000Z</published>
    <updated>2019-06-22T16:57:50.901Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图:"></a>效果图:</h2><p><img src="/2019/06/15/Hexo搭建博客NexT主题之在线聊天DaoVoice配置/daovoiceShow.png" alt> </p><h2 id="使用ThemeNexT主题集成DaoVoice与客户沟通的绝佳工具"><a href="#使用ThemeNexT主题集成DaoVoice与客户沟通的绝佳工具" class="headerlink" title="使用ThemeNexT主题集成DaoVoice与客户沟通的绝佳工具"></a>使用ThemeNexT主题集成DaoVoice与客户沟通的绝佳工具</h2><h3 id="1-首先点击DaoVoice到官网注册账号"><a href="#1-首先点击DaoVoice到官网注册账号" class="headerlink" title="1.首先点击DaoVoice到官网注册账号"></a>1.首先点击<a href="http://www.daovoice.io/" target="_blank" rel="noopener">DaoVoice</a>到官网注册账号</h3><ul><li>踩坑第一步：点击官网注册账号跳转链接会变。<br><img src="/2019/06/15/Hexo搭建博客NexT主题之在线聊天DaoVoice配置/keng1.png" alt><h3 id="2-跳转至DaoCloud页面注册"><a href="#2-跳转至DaoCloud页面注册" class="headerlink" title="2. 跳转至DaoCloud页面注册"></a>2. 跳转至DaoCloud页面注册</h3><img src="/2019/06/15/Hexo搭建博客NexT主题之在线聊天DaoVoice配置/p1.png" alt><h3 id="3-注册成功后，点击我发出的邀请码或手动输入邀请码：4da49702-进入下一步。"><a href="#3-注册成功后，点击我发出的邀请码或手动输入邀请码：4da49702-进入下一步。" class="headerlink" title="3. 注册成功后，点击我发出的邀请码或手动输入邀请码：4da49702 进入下一步。"></a>3. 注册成功后，点击我发出的<a href="http://dashboard.daovoice.io/get-started?invite_code=4da49702" target="_blank" rel="noopener">邀请码</a>或手动输入<code>邀请码</code>：<em>4da49702</em> 进入下一步。</h3><blockquote><p>提示：人数最多不能 &gt;5000人（5000人以上收费）<br><img src="/2019/06/15/Hexo搭建博客NexT主题之在线聊天DaoVoice配置/p2.png" alt></p></blockquote></li></ul><p>点击创建后，会直接跳转到控制台如图所示：</p><p><img src="/2019/06/15/Hexo搭建博客NexT主题之在线聊天DaoVoice配置/p3.png" alt></p><p>得到<code>app_id</code>方便操作以下配置主题<code>_config.yml</code>文件中的DaoVoice插件。</p><h2 id="配置主题"><a href="#配置主题" class="headerlink" title="配置主题"></a>配置主题</h2><h3 id="1-修改head-swig"><a href="#1-修改head-swig" class="headerlink" title="1.修改head.swig"></a>1.修改head.swig</h3><p>修改<code>/themes/next/layout/_partials/head.swig</code>文件，添加内容（直接复制即可）如下：</p><p><img src="/2019/06/15/Hexo搭建博客NexT主题之在线聊天DaoVoice配置/p4.png" alt></p><p>代码如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.daovoice %&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">  (function(i,s,o,g,r,a,m)&#123;i["DaoVoiceObject"]=r;i[r]=i[r]||function()&#123;(i[r].q=i[r].q||[]).push(arguments)&#125;,i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;a.charset="utf-8";m.parentNode.insertBefore(a,m)&#125;)(window,document,"script",('https:' == document.location.protocol ? 'https:' : 'http:') + "//widget.daovoice.io/widget/0f81ff2f.js","daovoice")</span><br><span class="line">  daovoice('init', &#123;</span><br><span class="line">      app_id: "&#123;&#123;theme.daovoice_app_id&#125;&#125;"</span><br><span class="line">    &#125;);</span><br><span class="line">  daovoice('update');</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><h2 id="2-主题配置文件"><a href="#2-主题配置文件" class="headerlink" title="2. 主题配置文件"></a>2. 主题配置文件</h2><p>在<code>_config.yml</code>文件末尾添加内容：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Online contact                     </span></span><br><span class="line"><span class="attr">daovoice:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">daovoice_app_id:</span> <span class="string">这里输入前面获取的app_id</span></span><br></pre></td></tr></table></figure><h2 id="Over-Ending（结束语）"><a href="#Over-Ending（结束语）" class="headerlink" title="Over Ending（结束语）"></a>Over Ending（结束语）</h2><h4 id="DaoVoice配置告一段落，其余的DaoVoice控制台窗口大小、颜色、图标……etc自己去探索吧"><a href="#DaoVoice配置告一段落，其余的DaoVoice控制台窗口大小、颜色、图标……etc自己去探索吧" class="headerlink" title="DaoVoice配置告一段落，其余的DaoVoice控制台窗口大小、颜色、图标……etc自己去探索吧!"></a>DaoVoice配置告一段落，其余的DaoVoice控制台窗口大小、颜色、图标……etc自己去探索吧!</h4><h3 id="注"><a href="#注" class="headerlink" title="注:"></a>注:</h3><p><strong>如果还有不了解的，可以在右下方与博主在线沟通</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="个人博客" scheme="https://jasonssun.github.io/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="Hexo" scheme="https://jasonssun.github.io/tags/Hexo/"/>
    
      <category term="NexT 7.0+" scheme="https://jasonssun.github.io/tags/NexT-7-0/"/>
    
      <category term="DaoVoice" scheme="https://jasonssun.github.io/tags/DaoVoice/"/>
    
  </entry>
  
  <entry>
    <title>来源于生活，却又高于生活</title>
    <link href="https://jasonssun.github.io/2019/06/13/%E4%BD%93%E4%BC%9A%E4%BA%BA%E5%AE%B6%E5%86%B7%E6%9A%96%EF%BC%8C%E6%84%9F%E6%82%9F%E4%BA%BA%E7%94%9F%E7%99%BE%E6%80%81%EF%BC%81/"/>
    <id>https://jasonssun.github.io/2019/06/13/体会人家冷暖，感悟人生百态！/</id>
    <published>2019-06-12T16:48:48.000Z</published>
    <updated>2019-07-09T14:06:33.918Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="说尺子"><a href="#说尺子" class="headerlink" title="说尺子"></a>说尺子</h1><p>   从100分到98分，挨一顿揍；从55分到61分，得一个吻。这看似荒诞不经的故事，却常常发生在我们身边，许多人看来，前者退步了挨揍是天经地义，后者进步了得吻是理所当然。</p><p>   我们常说，要一把尺子量到底。在现实生活中，应当说尺子是最公平的，但拿在不同人的手里，去度量不同的人，就会出现不同的结果。我们习惯了妈妈在厨房中的忙碌，一日三餐总是准时吃到可口的饭菜，可当有一天，我们回家面对着干锅冷灶的时候，却首先想到的是无饭可吃，沮丧之余，面露愠色，甚至开口责备，完全忽略了她累了病了，撑不住了，连烧口开水的力气也没有了；而我们的爸爸偶尔下一次厨房，煮一碗面，却能让一家人感到万分知足。惯性，使我们的尺子变得富有弹性，却无法丈量出爱的深远。</p><p>   每个单位都良莠不齐，有干的有看的，也有捣乱的，总有一些秃子混在和尚之中滥竽充数。奇怪的是干的永远在干，看的一直在看，而干得越多失误也越多，得到的批评也越多，而那些看客，偶尔偷机取巧做做样子，就会名利双收。甚至那些捣乱的，变得乖巧一些，就会让领导和一席众人皆大欢喜，心满意足。惰性，使我们的尺子带了偏见，就再也无法凝聚众人的力量。<br>      大家还记得北方小城那位舍粥的大嫂吗？每到冬天她就半夜起来，熬上满满的三锅热粥，免费送给寒风中瑟缩的清洁工、穷苦人和乞丐，数年如一日，不曾间断。而当有一天，一位老汉从中吃出了一粒沙子，顿时将一碗热粥泼在大嫂的身上，而领粥的人，也瞬间划分为两大阵营：有人说老汉不该撒野，也有人指责大嫂不该掺沙子。薄情，让我们的尺子扭曲，冷了多少善良的心。</p><p>   开县一辆满载了19名乘客的中巴，突遇险情，一头栽进深达五米的水塘。当地村民金有树跳进冰冷刺骨的水中，砸开车窗将19名乘客全部救出，自己却因长时间冷水的浸泡患上肺病，举债治疗数月，告借无门，不得不离开医院，病死家中。19名幸存者无一人去医院探视，更无人为他送行。金有树临死前写下一封信，第一句话就是：“我救了19人的命，现在谁来救我的命。”冷漠，让我们的尺子訇然寸断，留下无尽的遗憾。</p><p>   每个人心里都有一把尺子。我们用它来衡量别人，更要时常度量自己。这个世界，应当有这样一把尺子，于情充满温暖，于理凸显公平，于法彰显正义，时时刻刻闪耀着人性的光辉。只要坚持从我做起，从一点一滴做起，苛责自我，宽厚待人，星星之火，势必燎原，人间终会洒满阳光，洒满爱。</p><h1 id="读后感"><a href="#读后感" class="headerlink" title="读后感"></a>读后感</h1><p>   其实每个人心里又何尝没一把尺子呢？但是社会的残酷、人心的冷漠，不得不逼我们去做出选择。现在大街上很多乞讨的人，他们真的穷吗？就像有的人所说那样，你见过大早上就起来要饭的乞丐吗？我所见过的是没有，有些人就说乞丐不可能早上就起来要饭的，他们如果早上起得来，也就不会沦落为要饭。虽然大家都是有同情心的，可是如果利用大家的同情心谋取不义之财，却是我们所不能接受的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="生活" scheme="https://jasonssun.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="读后感" scheme="https://jasonssun.github.io/categories/%E7%94%9F%E6%B4%BB/%E8%AF%BB%E5%90%8E%E6%84%9F/"/>
    
    
      <category term="生活" scheme="https://jasonssun.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="体会" scheme="https://jasonssun.github.io/tags/%E4%BD%93%E4%BC%9A/"/>
    
      <category term="感悟" scheme="https://jasonssun.github.io/tags/%E6%84%9F%E6%82%9F/"/>
    
  </entry>
  
</feed>
